[
    {
        "id": "07d69e2a460a18da",
        "type": "tab",
        "label": "Pi-Info gather V0.3.0",
        "disabled": false,
        "info": "v0.2.1 - added code to get node.js version number\n       - added right alignment for versions\nv0.3.0 - clean up code",
        "env": []
    },
    {
        "id": "53ac84143b97ee93",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9275e1940cb248fa",
        "type": "tab",
        "label": "Create database",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ca9026e3044635be",
        "type": "group",
        "z": "07d69e2a460a18da",
        "name": "",
        "style": {
            "fill": "#ffff7f",
            "label": true
        },
        "nodes": [
            "d11644816c6cb5b0",
            "e1b2514610e2332a",
            "53c46dbef630ef61",
            "e6e2815c74aaba8a",
            "07d42386a1b45d56",
            "cc7a3620ea5d51b0",
            "c45fd4dcc90fe2c4",
            "11c1ab7c7c31de7b",
            "ee5ba830da6005b9",
            "20eeb18b5ce1d97f",
            "f49a159920175ff9",
            "5416021a7a1f49d6",
            "791e1d16b4c171c6",
            "d45cb025b5d3ec8f",
            "41e7918f97b38b1e",
            "c3b2b3ba6cf8b9b5",
            "3f6caed898db03bc",
            "1d71e0d4161885f4",
            "0932345dcb392f1c",
            "20bb34378d9e2cdc",
            "d4c75776214e3848",
            "a18e2683064c84df",
            "a29e08fc28db688b",
            "2821718dc9f61623"
        ],
        "x": 94,
        "y": -1,
        "w": 952,
        "h": 382
    },
    {
        "id": "003022e90c876f9e",
        "type": "group",
        "z": "07d69e2a460a18da",
        "name": "",
        "style": {
            "fill": "#ff7f7f",
            "label": true
        },
        "nodes": [
            "66d78b67dacf3b8c",
            "6b3c9594059ae8c1",
            "eef7f3ce393c51f7"
        ],
        "x": 814,
        "y": 439,
        "w": 212,
        "h": 162
    },
    {
        "id": "0fd78e353e4e133f",
        "type": "group",
        "z": "07d69e2a460a18da",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "405b00f8d21dd777",
            "35b3d2c3bbdb4f73",
            "86420a3490d88b70",
            "3058d3cf59fa0d07",
            "5e8d29599a4a710a",
            "b46c045a24dc2b1f",
            "b031b3b48f87bc3d",
            "2e1e2ff65e58f627",
            "8aded5205a7f9478",
            "2f8ae1db2caaf4b5",
            "f7272b9b05a6da2d",
            "a876efd4da821745"
        ],
        "x": 94,
        "y": 1179,
        "w": 892,
        "h": 282
    },
    {
        "id": "579e908f7463658d",
        "type": "group",
        "z": "9275e1940cb248fa",
        "name": "",
        "style": {
            "fill": "#ff3f3f",
            "label": true
        },
        "nodes": [
            "fa429b0eabf404fd"
        ],
        "x": 154,
        "y": 59
    },
    {
        "id": "fc0df6321866cd1f",
        "type": "group",
        "z": "07d69e2a460a18da",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "96a45c4640a5927d",
            "033b7fb995c98daf",
            "6af5f7c0afeff147",
            "0a2b09b1adbdf331",
            "eb820725f3582e55",
            "bc96487017b5fd2d",
            "42f720ad5e39b6ea",
            "92e4c364240a27eb"
        ],
        "x": 154,
        "y": 439,
        "w": 692,
        "h": 222
    },
    {
        "id": "43df993e2641ccc7",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "fc280b0a645350ec",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqttpizw.local",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9113425422938f2e",
        "type": "ui_group",
        "name": "show all P's",
        "tab": "4743286be1803569",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4743286be1803569",
        "type": "ui_tab",
        "name": "MainScreen",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "91eef5953f988089",
        "type": "ui_tab",
        "name": "HostDetails",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d3b0dfd8ac758638",
        "type": "ui_group",
        "name": "Details",
        "tab": "91eef5953f988089",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d54830887efaf336",
        "type": "sqlitedb",
        "db": "/home/pi/databases/pypi.db",
        "mode": "RWC"
    },
    {
        "id": "d11644816c6cb5b0",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "hostname",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"hostname\": \"hostname\"}",
        "payloadType": "json",
        "x": 720,
        "y": 80,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "e1b2514610e2332a",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "node-red",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodered\":\"node-red -?\"}",
        "payloadType": "json",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "53c46dbef630ef61",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "osrelease",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"osrelease\":\"lsb_release -c\"}",
        "payloadType": "json",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "e6e2815c74aaba8a",
        "type": "mqtt in",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "",
        "topic": "pypi_info/command/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc280b0a645350ec",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "07d42386a1b45d56"
            ]
        ]
    },
    {
        "id": "07d42386a1b45d56",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "cc7a3620ea5d51b0",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "grafana",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"grafana\": \"grafana-server -v\"}",
        "payloadType": "json",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "c45fd4dcc90fe2c4",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "netatalk",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"netatalk\": \"netatalk -v\"}",
        "payloadType": "json",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "11c1ab7c7c31de7b",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "influx",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"influx\": \"influx -version\"}",
        "payloadType": "json",
        "x": 910,
        "y": 80,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "ee5ba830da6005b9",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "IP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"ip\": \"hostname -I\"}",
        "payloadType": "json",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "20eeb18b5ce1d97f",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "Date",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"last_seen\":\"date +\\\"%Y-%m-%d %T\\\"\"}",
        "payloadType": "json",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "f49a159920175ff9",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "temperature",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"temperature\": \"vcgencmd measure_temp\"}",
        "payloadType": "json",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "5416021a7a1f49d6",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "memory",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"memory\": \"free\"}",
        "payloadType": "json",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "791e1d16b4c171c6",
        "type": "link out",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "to Run Command",
        "mode": "link",
        "links": [
            "6af5f7c0afeff147"
        ],
        "x": 390,
        "y": 340,
        "wires": [],
        "l": true
    },
    {
        "id": "d45cb025b5d3ec8f",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "model",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"model\":\"cat /proc/device-tree/model\"}",
        "payloadType": "json",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "41e7918f97b38b1e",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "mosquitto",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"mosquitto\": \"mosquitto -h\"}",
        "payloadType": "json",
        "x": 740,
        "y": 140,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "c3b2b3ba6cf8b9b5",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "python3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"python3\": \"python3 --version\"}",
        "payloadType": "json",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "3f6caed898db03bc",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "nginx",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nginx\": \"nginx -v\"}",
        "payloadType": "json",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "1d71e0d4161885f4",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "php",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"php\":\"php -v\"}",
        "payloadType": "json",
        "x": 910,
        "y": 200,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "0932345dcb392f1c",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "sqlite3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sqlite3\":\"sqlite3 -version\"}",
        "payloadType": "json",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "405b00f8d21dd777",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "manual run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1380,
        "wires": [
            [
                "35b3d2c3bbdb4f73"
            ]
        ]
    },
    {
        "id": "20bb34378d9e2cdc",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "disk",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"disk\": \"df /\"}",
        "payloadType": "json",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "35b3d2c3bbdb4f73",
        "type": "function",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "Setup data for inserts",
        "func": "let hosts = flow.get(\"hostnames\")||[]\nlet piData = {}\nlet data = {}\nlet mem = {}\nlet disk = {}\nconst d1 = new Date();\n\nhosts.forEach(hostname => {\n   piData = flow.get(hostname)||{}\n   // build the database record\n   msg.hostname          = piData.hostname       \n   data.hostname         = piData.hostname       \n   data.last_seen        = d1.getTime()  \n   data.ip               = piData.ip\n   data.model            = piData.model\n   data.osrelease        = piData.osrelease\n   data.temperature      = piData.temperature\n\n   memory = piData.memory\n   data.mem_available    = memory.mem.available\n   data.mem_buff_cache   = memory.mem.buff_cache\n   data.mem_free         = memory.mem.free       \n   data.mem_shared       = memory.mem.shared\n   data.mem_total        = memory.mem.total\n   data.mem_used         = memory.mem.used\n   data.used_total       = memory.swap.total\n   data.used_free        = memory.swap.free    \n   data.used_swap        = memory.swap.used  \n\n   disk = piData.disk\n   data.disk_size        = disk.size\n   data.disk_used        = disk.used\n   data.disk_avaliable   = disk.avaliable \n   data.disk_percentused = disk.percentused\n\n   data.grafana          = piData.grafana\n   data.influx           = piData.influx\n   data.mosquitto        = piData.mosquitto\n   data.netatalk         = piData.netatalk\n   data.nginx            = piData.nginx\n   data.nodered          = piData.nodered\n   data.php              = piData.php\n   data.python3          = piData.python3\n   data.sqlite3          = piData.sqlite3\n  \n   msg.data = data\n\n // operation\n   node.send(msg)\n});\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1340,
        "wires": [
            [
                "5e8d29599a4a710a",
                "2e1e2ff65e58f627",
                "8aded5205a7f9478",
                "2f8ae1db2caaf4b5",
                "2f396a7b17b6f188"
            ]
        ]
    },
    {
        "id": "3058d3cf59fa0d07",
        "type": "link out",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "Go Update Dashboard",
        "mode": "link",
        "links": [
            "c7dc9a8193f4d710"
        ],
        "x": 860,
        "y": 1400,
        "wires": [],
        "l": true
    },
    {
        "id": "5e8d29599a4a710a",
        "type": "template",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "REPLACE INTO piInfo",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "REPLACE INTO piInfo (\n    hostname, \n    last_seen,\n    ip,\n    model,\n    osrelease,\n    temperature,\n    uptime,\n    disk_percentused\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n    \"{{data.ip}}\",\n    \"{{data.model}}\",\n    \"{{data.osrelease}}\",\n     {{data.temperature}},\n    \"{{data.uptime}}\",\n    \"{{data.disk.percentused}}\"\n);",
        "output": "str",
        "x": 520,
        "y": 1260,
        "wires": [
            [
                "86420a3490d88b70",
                "d6d4a3d92caf7a25"
            ]
        ]
    },
    {
        "id": "b46c045a24dc2b1f",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1280,
        "wires": []
    },
    {
        "id": "66d78b67dacf3b8c",
        "type": "catch",
        "z": "07d69e2a460a18da",
        "g": "003022e90c876f9e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 920,
        "y": 520,
        "wires": [
            [
                "6b3c9594059ae8c1"
            ]
        ]
    },
    {
        "id": "6b3c9594059ae8c1",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "g": "003022e90c876f9e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 560,
        "wires": []
    },
    {
        "id": "b031b3b48f87bc3d",
        "type": "link in",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "Load to SQLite",
        "links": [
            "0a2b09b1adbdf331"
        ],
        "x": 220,
        "y": 1300,
        "wires": [
            [
                "35b3d2c3bbdb4f73"
            ]
        ],
        "l": true
    },
    {
        "id": "2e1e2ff65e58f627",
        "type": "template",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "INSERT INTO memory",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO memory (\n    hostname, \n    last_seen,\n    available_mem,\n    buff_cache,\n    free_mem,\n    shared_mem,\n    totalmem,\n    used_mem,\n    free_swap,\n    total_swap,\n    used_swap\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n     {{data.mem_available}},\n     {{data.mem_buff_cache}},\n     {{data.mem_free}},\n     {{data.mem_shared}},\n     {{data.mem_total}},\n     {{data.mem_used}},\n     {{data.used_total}},\n     {{data.used_free}},\n     {{data.used_swap}}\n);",
        "output": "str",
        "x": 520,
        "y": 1340,
        "wires": [
            [
                "86420a3490d88b70"
            ]
        ]
    },
    {
        "id": "8aded5205a7f9478",
        "type": "template",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "INSERT INTO diskspace",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO diskspace (\n    hostname, \n    last_seen,\n    disk_size,\n    disk_used,\n    disk_avaliable,\n    disk_percentused\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n     {{data.disk_size}},\n     {{data.disk_used}},\n     {{data.disk_avaliable}},\n    \"{{data.disk_percentused}}\"\n);",
        "output": "str",
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "86420a3490d88b70"
            ]
        ]
    },
    {
        "id": "2f8ae1db2caaf4b5",
        "type": "template",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "INSERT INTO temperature",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO temperature (\n    hostname, \n    last_seen,\n    temperature\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n     {{data.temperature}}\n)",
        "output": "str",
        "x": 540,
        "y": 1380,
        "wires": [
            [
                "86420a3490d88b70"
            ]
        ]
    },
    {
        "id": "d4c75776214e3848",
        "type": "comment",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "for monitoring out going MQTT msgs",
        "info": "",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "a18e2683064c84df",
        "type": "comment",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "These are the commands for testing",
        "info": "",
        "x": 280,
        "y": 40,
        "wires": []
    },
    {
        "id": "eef7f3ce393c51f7",
        "type": "comment",
        "z": "07d69e2a460a18da",
        "g": "003022e90c876f9e",
        "name": "Error Collection",
        "info": "",
        "x": 920,
        "y": 480,
        "wires": []
    },
    {
        "id": "f7272b9b05a6da2d",
        "type": "comment",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "Get the flow items and create the database inserts and store in tables",
        "info": "",
        "x": 390,
        "y": 1220,
        "wires": []
    },
    {
        "id": "710441d7a2ce2cc8",
        "type": "ui_ui_control",
        "z": "07d69e2a460a18da",
        "name": "",
        "events": "all",
        "x": 180,
        "y": 1720,
        "wires": [
            [
                "ec01a4d03c898a78"
            ]
        ]
    },
    {
        "id": "24f0c9dab10d3a60",
        "type": "ui_template",
        "z": "07d69e2a460a18da",
        "group": "9113425422938f2e",
        "name": "CSS for colors2",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<style>\n    .nr-dashboard-cardpanel {\n        border: 1px solid black;\n    }\n\n    .nr-dashboard-cardpanel > p {\n        text-align: center;\n        color: #000 !important;\n    }\n    .device_offline {\n        xbackground-color: #fcf2ba;\n        xbackground-color: #ff6457;\n        background-color: #ffa0a8;\n    }\n    .device_online {\n        background-color: #dcffcc; \n        color: #000000;\n    }\n    .warning_color {\n        background-color: #f3ffb8;\n    }\n    .warning_red {\n        background-color: #ff0000;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "8cde48d0bf8c3e17",
        "type": "change",
        "z": "07d69e2a460a18da",
        "name": "No data available",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No data available",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "46369cc7615923fa"
            ]
        ]
    },
    {
        "id": "505280ddb83b2ce6",
        "type": "ui_template",
        "z": "07d69e2a460a18da",
        "group": "9113425422938f2e",
        "name": "Raspberry Pi devices2",
        "order": 1,
        "width": "12",
        "height": "10",
        "format": "<div id=\"et_home\">\n<h2 style=\"text-align: center;\">PyPI Display Home </h2>\n<p style=\"text-align: center;\">List of Raspberry Pi's found on your LAN<p>\n<p style=\"text-align: center;\">Click on a 'Hostname' will get you details of that device<p>\n<p style=\"text-align: center;\">Click on a 'IP' will attempt to open Node-RED on that Pi<p>\n\n<br/>\n<table id=\"table\" border=\"1\">\n    <tr>\n        <th>Hostname</th> \n        <th>IP</th> \n        <th>Last Seen</th> \n        <th>Model</th>\n        <th>OS</th>\n        <th>Disk Used</th>\n        <th>Temperature</th>\n    </tr>\n    <tbody style=\"text-align: center\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td ng-if=\"x.device_status ==  'database is empty'\" class=\"warning_red\" >DATABASE IS EMPTY</td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"> \n                <md-button ng-click=\"send({host: x.hostname})\">{{x.hostname}}</md-button>\n            </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\"> \n                <md-button ng-click=\"send({host: x.hostname})\">{{x.hostname}}</md-button>\n            </td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\" ><a href=\"http://{{x.ip}}:1880\" target=\"_blank\"> {{x.ip}} </a></td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >        {{x.ip}}</td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.last_seen_text}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.last_seen_text}} </td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.model}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.model}} </td>\n\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.osrelease}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.osrelease}} </td>\n\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.disk_percentused}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.disk_percentused}} </td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.temperature}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.temperature}} </td>\n\n         </tr>\n    </tbody>\n</table>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 1800,
        "wires": [
            [
                "268ca1b3e72d8a10",
                "c3e15a6ca759c0ff"
            ]
        ]
    },
    {
        "id": "46369cc7615923fa",
        "type": "ui_toast",
        "z": "07d69e2a460a18da",
        "d": true,
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "ec01a4d03c898a78",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "Setup data for main dashboard",
        "func": "let payloads = msg.payload\n\n// get the list of known hosts \nlet hosts = flow.get(\"hostnames\")||[]\n\nlet data = {}\nlet mem = {}\nlet disk = {}\nconst hostArray =[] // this will be sent to the dashboard\n\n// combine all flow.\"hostname\" objects into one\nhosts.forEach(hostname => {\n    var piData = flow.get(hostname)||{}\n    piData.device_status = 1  // set pi status to active\n\n    // convert last_seen to a string and add it to object\n    let d = new Date(piData.last_seen);\n    let last_seen_time = d.getTime();\n    piData.last_seen_text = d.toLocaleString(\"en-US\")\n\n    // get current time - 10 minutes\n    var interval_limit = new Date().getTime() - 600000;\n\n    // if pi hasn't been seen in over an hour set status out of service\n    if (interval_limit > last_seen_time) piData.device_status = 0\n\n    piData.disk_percentused = piData.disk_percentused\n\n    // push the host data into data array tobe sent to the ui-template\n    hostArray.push(piData)\n    });\n\nmsg.payload = hostArray\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "505280ddb83b2ce6"
            ]
        ]
    },
    {
        "id": "6a80e8244c27761b",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1640,
        "wires": [
            [
                "ec01a4d03c898a78",
                "b343d19acdde2a94"
            ]
        ]
    },
    {
        "id": "268ca1b3e72d8a10",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c7dc9a8193f4d710",
        "type": "link in",
        "z": "07d69e2a460a18da",
        "name": "Update Dashboard",
        "links": [
            "3058d3cf59fa0d07",
            "4d05e533fc214a78",
            "2c32eda9695f32d7",
            "2862d666b212a15f"
        ],
        "x": 210,
        "y": 1680,
        "wires": [
            [
                "710441d7a2ce2cc8"
            ]
        ],
        "l": true
    },
    {
        "id": "41e09307455568f8",
        "type": "ui_button",
        "z": "07d69e2a460a18da",
        "name": "",
        "group": "9113425422938f2e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1760,
        "wires": [
            [
                "ec01a4d03c898a78"
            ]
        ]
    },
    {
        "id": "43bab234d19299ec",
        "type": "mqtt in",
        "z": "07d69e2a460a18da",
        "name": "",
        "topic": "pypi_info/results/#",
        "qos": "2",
        "datatype": "json",
        "broker": "fc280b0a645350ec",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 720,
        "wires": [
            [
                "3f473041a19755ba",
                "762682e95fb97373"
            ]
        ]
    },
    {
        "id": "e96243ba217a1be9",
        "type": "change",
        "z": "07d69e2a460a18da",
        "name": "payload = stdout",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.stdout",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 860,
        "wires": [
            [
                "5884c31d823950a9",
                "66d63b61d3a81185"
            ]
        ]
    },
    {
        "id": "5884c31d823950a9",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 940,
        "wires": []
    },
    {
        "id": "8f92d39170a6a25a",
        "type": "change",
        "z": "07d69e2a460a18da",
        "name": "payload = not installed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "not installed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 820,
        "wires": [
            [
                "162ffaeb1e1d51e6"
            ]
        ]
    },
    {
        "id": "2b70250bbdad95fb",
        "type": "switch",
        "z": "07d69e2a460a18da",
        "name": "stdout empty?",
        "property": "payload.stdout",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 840,
        "wires": [
            [
                "8f92d39170a6a25a"
            ],
            [
                "e96243ba217a1be9"
            ]
        ]
    },
    {
        "id": "162ffaeb1e1d51e6",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "NOT FOUND",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 760,
        "wires": []
    },
    {
        "id": "069805d859bda384",
        "type": "change",
        "z": "07d69e2a460a18da",
        "name": "set msg.hostname and msg.command",
        "rules": [
            {
                "t": "set",
                "p": "hostname",
                "pt": "msg",
                "to": "payload.hostname",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "payload.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 780,
        "wires": [
            [
                "2b70250bbdad95fb"
            ]
        ]
    },
    {
        "id": "52321191a09e2259",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "Parsed results",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 820,
        "wires": []
    },
    {
        "id": "e7264cd01ed3ad4f",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "Parse Piinfo",
        "func": "// This function will build a piinfo table entry once all\n// the required data has has been  received\nlet hostname = msg.hostname\nlet command = msg.command\nlet payload = msg.payload\nlet host = flow.get(hostname)||{}\nlet items = 0\n\nif(host.hasOwnProperty(\"ip\")) items++\nif(host.hasOwnProperty(\"model\")) items++\nif(host.hasOwnProperty(\"disk_percentused\")) items++\nif(host.hasOwnProperty(\"uptime\")) items++\nif(host.hasOwnProperty(\"temperature\")) items++\n\n// format commands that have extra text in their responses\nswitch(command) {\n   case \"hostname\":\n        payload = hostname;\n        items--\n        break;\n\n     case \"ip\":\n        payload = payload.replace(/ \\n/g, '');\n        break;\n\n    case \"last_seen\":\n        payload = Date.parse(payload);\n        break;\n\n    case \"model\":\n        payload = payload.slice(0, -1);\n        payload = payload.toString();\n        payload = payload.replace(\"Raspberry \",\"\");\n        break;\n \n    case \"osrelease\":\n        payload = payload.replace('Codename:', '');\n        payload = payload.trim();\n        break;\n \n    case \"temperature\":\n        payload = payload.split(\"=\")[1];\n        payload = payload.replace(/\\n/g,\"\");\n        payload = payload.replace(\"'C\", \"\");\n        payload = parseFloat(payload)\n        break;\n\n    case \"uptime\":\n        payload = payload.replace(/[\\r\\n]+/gm, \"\");\n        break;\n\n    default:\n        break;\n}\n\nconst d1 = new Date();\nhost['last_seen']   = d1.getTime();\n\nmsg.payload = payload\nhost[command] = payload;\n//node.warn(host)\nflow.set(hostname, host)\nmsg.data = host\n\n//if all items found, write out the piinfo record\nif (items < 5) return\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 820,
        "wires": [
            [
                "52321191a09e2259",
                "5e8d29599a4a710a"
            ]
        ]
    },
    {
        "id": "3f36aa6dd430f195",
        "type": "comment",
        "z": "07d69e2a460a18da",
        "name": "Parse the results returned from MQTT and store ther results in some flow variables",
        "info": "",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "96a45c4640a5927d",
        "type": "function",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "Format MQTT topic/data",
        "func": "const cmds = msg.payload;\n//Object.values(cmds).forEach( cmd => {\n//  msg.product = cmd;\n//  msg.payload = cmd;\n//  node.send(msg);\n//});\nObject.entries(cmds).forEach(entry => {\n  const [software, cmd] = entry;\n  msg.software = software;\n//  msg.payload = cmd;\n  msg.topic = 'pypi_info/command'+\"/\"+msg.software\n  node.send(msg);\n});\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 620,
        "wires": [
            [
                "033b7fb995c98daf",
                "41270b81eec2eaa1"
            ]
        ]
    },
    {
        "id": "033b7fb995c98daf",
        "type": "mqtt out",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc280b0a645350ec",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "6af5f7c0afeff147",
        "type": "link in",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "Run Command",
        "links": [
            "791e1d16b4c171c6",
            "4cdb05881444d3b0"
        ],
        "x": 320,
        "y": 620,
        "wires": [
            [
                "96a45c4640a5927d"
            ]
        ],
        "l": true
    },
    {
        "id": "0a2b09b1adbdf331",
        "type": "link out",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "to Load to SQLite",
        "mode": "link",
        "links": [
            "b031b3b48f87bc3d"
        ],
        "x": 710,
        "y": 580,
        "wires": [],
        "l": true
    },
    {
        "id": "eb820725f3582e55",
        "type": "comment",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "Publish commands to MQTT so devices with pypi-info installed will reply",
        "info": "",
        "x": 440,
        "y": 480,
        "wires": []
    },
    {
        "id": "bc96487017b5fd2d",
        "type": "trigger",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "",
        "op1": "koad to sqlite",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "20",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 580,
        "wires": [
            [
                "0a2b09b1adbdf331"
            ]
        ]
    },
    {
        "id": "e74496e0f9f653b1",
        "type": "switch",
        "z": "07d69e2a460a18da",
        "name": "payload empty?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 1740,
        "wires": [
            [
                "8cde48d0bf8c3e17"
            ],
            [
                "505280ddb83b2ce6"
            ]
        ]
    },
    {
        "id": "aebec645fe271770",
        "type": "comment",
        "z": "07d69e2a460a18da",
        "name": "Get data from the flow variables and display it on the dashboard",
        "info": "",
        "x": 530,
        "y": 1620,
        "wires": []
    },
    {
        "id": "69920c97a9a96e6a",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "name": "delete FLOW context",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2020,
        "wires": [
            [
                "d929fc93e69e6a94"
            ]
        ]
    },
    {
        "id": "d929fc93e69e6a94",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "",
        "func": "\n// get the list of known hosts \nlet hosts = flow.get(\"hostnames\")||[]\nnode.warn(hosts)\n//let data = {}\n//let mem = {}\n//let disk = {}\n\n// combine all flow.\"hostname\" objects into one\nhosts.forEach(hostname => {\n    var piData = flow.get(hostname)||{}\n    flow.set(hostname, undefined)    \n    \n});\n\nflow.set(\"hostnames\",undefined)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2020,
        "wires": [
            [
                "8a814c3883cab450",
                "22d3100218cc81fc"
            ]
        ]
    },
    {
        "id": "f6c9c75a757e12ab",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 2020,
        "wires": []
    },
    {
        "id": "8a814c3883cab450",
        "type": "change",
        "z": "07d69e2a460a18da",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2020,
        "wires": [
            [
                "f6c9c75a757e12ab"
            ]
        ]
    },
    {
        "id": "7e72270f6a715f9b",
        "type": "link out",
        "z": "07d69e2a460a18da",
        "name": "to Pi Details",
        "mode": "link",
        "links": [
            "92d41864b5695ada"
        ],
        "x": 830,
        "y": 1840,
        "wires": [],
        "l": true
    },
    {
        "id": "6ac23c32b01da97a",
        "type": "change",
        "z": "07d69e2a460a18da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"HostDetails\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1840,
        "wires": [
            [
                "7e72270f6a715f9b"
            ]
        ]
    },
    {
        "id": "c3e15a6ca759c0ff",
        "type": "switch",
        "z": "07d69e2a460a18da",
        "name": "",
        "property": "host",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 1840,
        "wires": [
            [],
            [
                "6ac23c32b01da97a"
            ]
        ]
    },
    {
        "id": "a876efd4da821745",
        "type": "template",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "name": "REPLACE INTO software",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "REPLACE INTO software (\n    hostname, \n    last_seen,\n    product,\n    release              \n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n    \"{{data.product}}\",\n    \"{{data.release}}\"\n);",
        "output": "str",
        "x": 530,
        "y": 1420,
        "wires": [
            [
                "86420a3490d88b70"
            ]
        ]
    },
    {
        "id": "2f396a7b17b6f188",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1500,
        "wires": []
    },
    {
        "id": "3f473041a19755ba",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 1000,
        "wires": []
    },
    {
        "id": "66d63b61d3a81185",
        "type": "switch",
        "z": "07d69e2a460a18da",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "results/hostname",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/ip",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/last_seen",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/uptime",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/model",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/osrelease",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/disk",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/memory",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/temperature",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 10,
        "x": 670,
        "y": 860,
        "wires": [
            [
                "e7264cd01ed3ad4f"
            ],
            [
                "e7264cd01ed3ad4f"
            ],
            [
                "e7264cd01ed3ad4f"
            ],
            [
                "e7264cd01ed3ad4f",
                "154cadb367161f1d"
            ],
            [
                "e7264cd01ed3ad4f"
            ],
            [
                "e7264cd01ed3ad4f"
            ],
            [
                "228fed797859109e"
            ],
            [
                "9a7fbe9fabf84c95"
            ],
            [
                "b9d3b0242d0b47d2"
            ],
            [
                "48c2822bc71fb5f0"
            ]
        ]
    },
    {
        "id": "b2e5233e50e81a43",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "SOFTWARE",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 940,
        "wires": []
    },
    {
        "id": "48c2822bc71fb5f0",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "Parse Software",
        "func": "// prep to store in software table\nlet release = msg.payload\n//let topic = msg.topic\nlet product = msg.command\n//let command = topic.split('/')[2]\nlet data = {}\n\n// extract release from results that have extra text in their responses\nswitch(product) {\n   case \"influx\":\n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" \")[3];\n        break;\n\n    case \"mosquitto\":\n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" \")[2];\n        break;\n \n    case \"netatalk\": \n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" -\")[0];\n        release = release.replace('netatalk ', '');\n        break;\n\n    case \"nodered\": \n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" \")[1];\n        release = release.replace(\"v\",\"\");\n        break;\n\n    case \"nodejs\": \n        release = release.replace(/\\n/g,\"\");\n//        release = release.split(\" \")[1];\n        release = release.replace(\"v\",\"\");\n        break;\n\n    case \"osrelease\":\n        release = release.replace('Codename:', '');\n        release = release.trim();\n        break;\n \n    case \"php\":\n        release = release.replace(/\\n/g, '');\n        release = release.split(\" \")[1];\n        break;\n \n    case \"python3\":\n        release = release.replace(/\\n/g, '');\n        release = release.replace('Python ', '');\n        break;\n \n    case \"sqlite3\":\n        release = release.split(\" \")[0];\n        break;\n\n    default:\n        break;\n}\n\nconst d1 = new Date();\n\nmsg.payload = ''\ndata.hostname = msg.hostname\ndata.last_seen = d1.getTime();\ndata.product  = msg.command\ndata.release  = release\n\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 980,
        "wires": [
            [
                "b2e5233e50e81a43",
                "a876efd4da821745"
            ]
        ]
    },
    {
        "id": "228fed797859109e",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "Parse Disk Space",
        "func": "// memory to store in DB\nlet payload = msg.payload\nlet data = {}\ndata.hostname = msg.hostname\nlet host = flow.get(msg.hostname)||{}\n\npayload               = payload.replace(/  +/g, ' ');\npayload               = payload.split(\" \");\ndata.disk_size        = parseInt(payload[7]);\ndata.disk_used        = parseInt(payload[8]);\ndata.disk_avaliable   = parseInt(payload[9]);\ndata.disk_percentused = payload[10];\n\nconst d1 = new Date();\nlet last_seen = d1.getTime();\ndata.last_seen   = last_seen\nhost.disk_percentused = payload[10]\n\nflow.set(msg.hostname, host)\n\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 860,
        "wires": [
            [
                "8aded5205a7f9478",
                "41929e53c3e4dd14"
            ]
        ]
    },
    {
        "id": "9a7fbe9fabf84c95",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "Parse Memory",
        "func": "// model to store in DB\nlet data = {}\nlet payload = msg.payload\n\ndata.hostname = msg.hostname\nconst d1 = new Date();\ndata.last_seen   = d1.getTime();\n\npayload = payload.replace(/\\n/g,\" \");\npayload = payload.replace(/  +/g, ' ');\npayload = payload.split(\" \");\ndata.mem_total      = parseInt(payload[8]);\ndata.mem_used       = parseInt(payload[9]);\ndata.mem_free       = parseInt(payload[10]);\ndata.mem_shared     = parseInt(payload[11]);\ndata.mem_buff_cache = parseInt(payload[12]);\ndata.mem_available  = parseInt(payload[13]);\ndata.used_total     = parseInt(payload[15]);\ndata.used_free      = parseInt(payload[16]);\ndata.used_swap      = parseInt(payload[17]);\n\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 900,
        "wires": [
            [
                "2e1e2ff65e58f627",
                "41929e53c3e4dd14"
            ]
        ]
    },
    {
        "id": "d6d4a3d92caf7a25",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "PIINFO",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1140,
        "wires": []
    },
    {
        "id": "b9d3b0242d0b47d2",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "Parse Temperature",
        "func": "// prep to store in software table\nlet payload = msg.payload\nlet data = {}\nlet hostname = msg.hostname\nlet host = flow.get(hostname)||{}\n\npayload = payload.split(\"=\")[1];\npayload = payload.replace(/\\n/g,\"\");\npayload = payload.replace(\"'C\", \"\");\npayload = parseFloat(payload)\n \n\nconst d1 = new Date();\n//msg.payload = ''\ndata.hostname    = msg.hostname\ndata.last_seen   = d1.getTime();\ndata.temperature = payload\nhost.temperature = payload\nflow.set(hostname, host)\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 940,
        "wires": [
            [
                "2f8ae1db2caaf4b5"
            ]
        ]
    },
    {
        "id": "41929e53c3e4dd14",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 900,
        "wires": []
    },
    {
        "id": "154cadb367161f1d",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 980,
        "wires": []
    },
    {
        "id": "17aeaecd71857b30",
        "type": "link call",
        "z": "07d69e2a460a18da",
        "name": "",
        "links": [
            "0ff77c6b9b60dfa0"
        ],
        "timeout": "30",
        "x": 610,
        "y": 1660,
        "wires": [
            [
                "190bee442cd48f1e"
            ]
        ]
    },
    {
        "id": "8447eb3a803f9a19",
        "type": "link out",
        "z": "07d69e2a460a18da",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 820,
        "y": 1940,
        "wires": [],
        "l": true
    },
    {
        "id": "0ff77c6b9b60dfa0",
        "type": "link in",
        "z": "07d69e2a460a18da",
        "name": "SQL",
        "links": [],
        "x": 190,
        "y": 1940,
        "wires": [
            [
                "058886d0f955b6cb"
            ]
        ],
        "l": true
    },
    {
        "id": "b343d19acdde2a94",
        "type": "change",
        "z": "07d69e2a460a18da",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from piinfo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1660,
        "wires": [
            [
                "17aeaecd71857b30"
            ]
        ]
    },
    {
        "id": "190bee442cd48f1e",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1660,
        "wires": []
    },
    {
        "id": "42f720ad5e39b6ea",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "Device info (5 min)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"disk\":\"df /\",\"last_seen\":\"date +\\\"%Y-%m-%d %T\\\"\",\"hostname\":\"hostname\",\"ip\":\"hostname -I\",\"memory\":\"free\",\"model\":\"cat /proc/device-tree/model\",\"osrelease\":\"lsb_release -c\",\"temperature\":\"vcgencmd measure_temp\",\"uptime\":\"uptime -p\"}",
        "payloadType": "json",
        "x": 290,
        "y": 520,
        "wires": [
            [
                "96a45c4640a5927d"
            ]
        ]
    },
    {
        "id": "22d3100218cc81fc",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 2100,
        "wires": []
    },
    {
        "id": "92e4c364240a27eb",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "fc0df6321866cd1f",
        "name": "all commands (1 HR)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"disk\":\"df /\",\"last_seen\":\"date +\\\"%Y-%m-%d %T\\\"\",\"grafana\":\"grafana-server -v\",\"hostname\":\"hostname\",\"influx\":\"influx -version\",\"ip\":\"hostname -I\",\"memory\":\"free\",\"model\":\"cat /proc/device-tree/model\",\"mosquitto\":\"mosquitto -h\",\"netatalk\":\"netatalk -v\",\"nginx\":\"nginx -v\",\"nodered\":\"node-red -?\",\"nodejs\":\"node -v\",\"osrelease\":\"lsb_release -c\",\"php\":\"php -v\",\"python3\":\"python3 --version\",\"sqlite3\":\"sqlite3 -version\",\"temperature\":\"vcgencmd measure_temp\",\"uptime\":\"uptime -p\"}",
        "payloadType": "json",
        "x": 290,
        "y": 560,
        "wires": [
            [
                "96a45c4640a5927d"
            ]
        ]
    },
    {
        "id": "41270b81eec2eaa1",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 660,
        "wires": []
    },
    {
        "id": "86420a3490d88b70",
        "type": "sqlite",
        "z": "07d69e2a460a18da",
        "g": "0fd78e353e4e133f",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Replace/Insert nodes",
        "x": 860,
        "y": 1340,
        "wires": [
            [
                "3058d3cf59fa0d07",
                "b46c045a24dc2b1f"
            ]
        ]
    },
    {
        "id": "058886d0f955b6cb",
        "type": "sqlite",
        "z": "07d69e2a460a18da",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "select * from piinfo where hostname = {{msg.payload}};",
        "name": "SQL processor",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "8447eb3a803f9a19"
            ]
        ]
    },
    {
        "id": "a29e08fc28db688b",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "nodejs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodejs\":\"node -v\"}",
        "payloadType": "json",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "2821718dc9f61623",
        "type": "inject",
        "z": "07d69e2a460a18da",
        "g": "ca9026e3044635be",
        "name": "uptime",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"uptime\": \"uptime -p\"}",
        "payloadType": "json",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "791e1d16b4c171c6"
            ]
        ]
    },
    {
        "id": "3efe3106ba02abf6",
        "type": "function",
        "z": "07d69e2a460a18da",
        "name": "Build flow.hostnames array",
        "func": "// get the hostnames array from context\nlet hostnames = flow.get('hostnames')||[]\n\n// get current hostname\nlet hostname = msg.payload.hostname\n\n// push the current name onto the array\nhostnames.push(hostname);\n\n// remove duplicate hostnames\nlet uniqueNames = [...new Set(hostnames)];\n\n// save the hostnames array)\nflow.set('hostnames', uniqueNames)\nhostnames = flow.get('hostnames')\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "762682e95fb97373",
        "type": "switch",
        "z": "07d69e2a460a18da",
        "name": "",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "dir",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "tar",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 720,
        "wires": [
            [
                "b59d16c8f4bb4fd7"
            ],
            [
                "75e6ee9a8d754da0"
            ],
            [
                "069805d859bda384"
            ]
        ]
    },
    {
        "id": "75e6ee9a8d754da0",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 740,
        "wires": []
    },
    {
        "id": "b59d16c8f4bb4fd7",
        "type": "debug",
        "z": "07d69e2a460a18da",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "3ddc272c833ba419",
        "type": "comment",
        "z": "53ac84143b97ee93",
        "name": "This flow grabs the stored data and displays it.",
        "info": "",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "e91778ea5cd94b79",
        "type": "ui_ui_control",
        "z": "53ac84143b97ee93",
        "name": "",
        "events": "all",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "538e5e0b4c33fc72",
                "9d3944a0ef36308f"
            ]
        ]
    },
    {
        "id": "999b85f7fc36c282",
        "type": "ui_template",
        "z": "53ac84143b97ee93",
        "group": "d3b0dfd8ac758638",
        "name": "CSS for Pi details",
        "order": 22,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .version {\n        text-align: right;\n    }\n    .nr-dashboard-cardpanel {\n        border: 1px solid black;\n    }\n\n    #Home_Enter_the_IP_of_a_GHOST_device_and_press_DELETE_to_delete_it .nr-dashboard-cardcontainer > .visible,\n    #Home_Enter_the_IP_of_a_GHOST_device_and_press_DELETE_to_delete_it {\n        background-color: #ff9393 !important;\n        test-align: center;\n    }\n    .nr-dashboard-cardpanel > p {\n        text-align: center;\n        color: #000 !important;\n    }\n    .offline {\n        text-align: center;\n        background-color: #ffa0a8 !important;\n    }\n    .device_offline {\n        xbackground-color: #fcf2ba;\n        xbackground-color: #ff6457;\n        background-color: #ffa0a8;\n    }\n    .device_online {\n        background-color: #dcffcc; \n        color: #000000;\n    }\n    .warning_color {\n        background-color: #f3ffb8;\n    }\n    .warning_red {\n        background-color: #ff0000;\n    }\n    .bold-this {\n        font-weight: bold;\n    }\n    .center-this {\n        text-align: center;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 350,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "019bf2f9524a97d9",
        "type": "ui_template",
        "z": "53ac84143b97ee93",
        "group": "d3b0dfd8ac758638",
        "name": "Show Pi details",
        "order": 2,
        "width": "8",
        "height": 10,
        "format": "\n<div id=\"et_home\">\n<h2 style=\"text-align: center; text-transform: uppercase;\">{{msg.host}} </h2>\n<p style=\"text-align: center;\">Details for <span class=\"hostname\">{{msg.host}}</span> found on your LAN<p>\n\n<h2 style=\"text-align: center;  background-color: #ffa0a8 !important;\" ng-if='msg.piinfo[0].device_status ==  0' >OFFLINE</h2>\n\n<div style=\"text-align: center;\"> <span class=\"bold-this\">{{msg.piinfo[0].model}}</span> running <span class=\"bold-this\">{{msg.piinfo[0].osrelease}}</span>\n<br/> last seen <span class=\"bold-this\">{{msg.piinfo[0].last_seen_text}}</span>  \n<br/>  <span class=\"bold-this\">{{msg.piinfo[0].uptime}}</span>. \n<br/>Temperature <span class=\"bold-this\">{{msg.piinfo[0].temperature}}C</span> and used <span class=\"bold-this\">{{msg.diskspace[0].disk_percentused}}</span> of it's storage.\n</div>\n<br>\n<table id=\"table\" border=\"1\" style=\"margin-left: auto; margin-right: auto;\">\n<caption class=\"bold-this\">Installed Software</caption>\n<tbody style=\"text-align: center\">\n    <tr>\n        <th>Product</th> \n        <th>Version</th> \n    </tr>\n    <tbody style=\"text-align: left\">\n        <tr ng-repeat=\"x in msg.software\">\n            <td ng-if='msg.piinfo[0].device_status ==  1' class=\"device_online\"  >{{x.product}} </td>\n            <td ng-if='msg.piinfo[0].device_status ==  0' class=\"device_offline\" >{{x.product}} </td>\n\n            <td ng-if='msg.piinfo[0].device_status ==  1' class=\"version device_online\"  >{{x.release}} </td>\n            <td ng-if='msg.piinfo[0].device_status ==  0' class=\"version device_offline\" >{{x.release}} </td>\n         </tr>\n    </tbody>\n</table>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 680,
        "wires": [
            [
                "7d98a85ac49cc41d"
            ]
        ]
    },
    {
        "id": "f285f29d4076a6fc",
        "type": "function",
        "z": "53ac84143b97ee93",
        "name": "Setup data for Details ",
        "func": "let piinfo = msg.piinfo[0]\n\n// convert last_seen to a string and add it to object\nlet d = new Date(piinfo.last_seen);\npiinfo.last_seen_text = d.toLocaleString(\"en-US\")\n\n// get current time - 10 minutes\nvar interval_limit = new Date().getTime() - 600000;\n\npiinfo.device_status = 1\n\n// if pi hasn't been seen in more than the interval, set status out of service\nif (interval_limit > piinfo.last_seen) piinfo.device_status = 0\n\n\nmsg.piinfo[0] = piinfo\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 620,
        "wires": [
            [
                "be945c4967fb0f53",
                "019bf2f9524a97d9"
            ]
        ]
    },
    {
        "id": "7d98a85ac49cc41d",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 680,
        "wires": []
    },
    {
        "id": "b358f0aa9c5bc7c3",
        "type": "ui_button",
        "z": "53ac84143b97ee93",
        "name": "",
        "group": "d3b0dfd8ac758638",
        "order": 23,
        "width": "8",
        "height": "1",
        "passthru": false,
        "label": "Return",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"tab\":\"MainScreen\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 900,
        "wires": [
            [
                "4d05e533fc214a78"
            ]
        ]
    },
    {
        "id": "48c4c7d87965ee6a",
        "type": "catch",
        "z": "53ac84143b97ee93",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 820,
        "y": 80,
        "wires": [
            [
                "14f6b70388740986"
            ]
        ]
    },
    {
        "id": "14f6b70388740986",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "be945c4967fb0f53",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 620,
        "wires": []
    },
    {
        "id": "566397c081cdb9de",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "piInfo",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "piInfo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "ed31fa240d1e6339"
            ]
        ]
    },
    {
        "id": "92d41864b5695ada",
        "type": "link in",
        "z": "53ac84143b97ee93",
        "name": "Pi Details",
        "links": [
            "7e72270f6a715f9b"
        ],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "cc822db2244cdbba",
                "e91778ea5cd94b79",
                "566397c081cdb9de"
            ]
        ],
        "l": true
    },
    {
        "id": "538e5e0b4c33fc72",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "147718afa0135ed8",
        "type": "link out",
        "z": "53ac84143b97ee93",
        "name": "sqlnode return",
        "mode": "return",
        "links": [],
        "x": 860,
        "y": 1060,
        "wires": [],
        "l": true
    },
    {
        "id": "ed31fa240d1e6339",
        "type": "link call",
        "z": "53ac84143b97ee93",
        "name": "call sql node",
        "links": [
            "95da72028cf9cd2f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 320,
        "wires": [
            [
                "5659d093c533e75c"
            ]
        ]
    },
    {
        "id": "95da72028cf9cd2f",
        "type": "link in",
        "z": "53ac84143b97ee93",
        "name": "sqlnode",
        "links": [],
        "x": 310,
        "y": 1060,
        "wires": [
            [
                "a78ce03b397a859d"
            ]
        ],
        "l": true
    },
    {
        "id": "5659d093c533e75c",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "piinfo",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 320,
        "wires": [
            [
                "fdcee3b4a0ca0c21",
                "c8461bbbb2a749c9"
            ]
        ]
    },
    {
        "id": "fdcee3b4a0ca0c21",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "9f5f6284069a7b3c",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "memory",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "memory",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 440,
        "wires": [
            [
                "bb0bd108d68ba251"
            ]
        ]
    },
    {
        "id": "bb0bd108d68ba251",
        "type": "link call",
        "z": "53ac84143b97ee93",
        "name": "call sql node",
        "links": [
            "95da72028cf9cd2f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "535de036cac75e4f"
            ]
        ]
    },
    {
        "id": "535de036cac75e4f",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "memory",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 440,
        "wires": [
            [
                "af9f19468bdd9008",
                "52c90be2130f98fe"
            ]
        ]
    },
    {
        "id": "af9f19468bdd9008",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 440,
        "wires": []
    },
    {
        "id": "c8461bbbb2a749c9",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "diskspace",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "diskspace",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "505f5f7369896f84"
            ]
        ]
    },
    {
        "id": "505f5f7369896f84",
        "type": "link call",
        "z": "53ac84143b97ee93",
        "name": "call sql node",
        "links": [
            "95da72028cf9cd2f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 380,
        "wires": [
            [
                "2a57e04f9d3a6292"
            ]
        ]
    },
    {
        "id": "2a57e04f9d3a6292",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "diskspace",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "5811735a85d61259",
                "9f5f6284069a7b3c"
            ]
        ]
    },
    {
        "id": "5811735a85d61259",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "52c90be2130f98fe",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "temperature",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "temperature",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "cf132f9d06d19f90"
            ]
        ]
    },
    {
        "id": "cf132f9d06d19f90",
        "type": "link call",
        "z": "53ac84143b97ee93",
        "name": "call sql node",
        "links": [
            "95da72028cf9cd2f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 500,
        "wires": [
            [
                "d35b600623728ed4"
            ]
        ]
    },
    {
        "id": "d35b600623728ed4",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 500,
        "wires": [
            [
                "fb06abd1572ccb69",
                "2491ed42160bb3aa"
            ]
        ]
    },
    {
        "id": "fb06abd1572ccb69",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "a78ce03b397a859d",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "piInfo",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from qaz1 where hostname = \"qaz2\" ORDER BY last_seen qaz3",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "qaz1",
                "fromt": "str",
                "to": "table",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "qaz2",
                "fromt": "str",
                "to": "host",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "qaz3",
                "fromt": "str",
                "to": "limit",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1060,
        "wires": [
            [
                "9abb2d4a70693f1b"
            ]
        ]
    },
    {
        "id": "cc822db2244cdbba",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 160,
        "wires": []
    },
    {
        "id": "4d05e533fc214a78",
        "type": "link out",
        "z": "53ac84143b97ee93",
        "name": "",
        "mode": "link",
        "links": [
            "c7dc9a8193f4d710"
        ],
        "x": 445,
        "y": 900,
        "wires": []
    },
    {
        "id": "2491ed42160bb3aa",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "software",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "software",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": ";",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 560,
        "wires": [
            [
                "4a4ea9e55263979c"
            ]
        ]
    },
    {
        "id": "4a4ea9e55263979c",
        "type": "link call",
        "z": "53ac84143b97ee93",
        "name": "call sql node",
        "links": [
            "95da72028cf9cd2f"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 560,
        "wires": [
            [
                "4ff03d47d5e30980"
            ]
        ]
    },
    {
        "id": "4ff03d47d5e30980",
        "type": "change",
        "z": "53ac84143b97ee93",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "software",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "table",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "limit",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 560,
        "wires": [
            [
                "313e8efa354ec021",
                "f285f29d4076a6fc"
            ]
        ]
    },
    {
        "id": "313e8efa354ec021",
        "type": "debug",
        "z": "53ac84143b97ee93",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 560,
        "wires": []
    },
    {
        "id": "e8ecc6e857d44af0",
        "type": "comment",
        "z": "53ac84143b97ee93",
        "name": "Get data from table",
        "info": "",
        "x": 350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9abb2d4a70693f1b",
        "type": "sqlite",
        "z": "53ac84143b97ee93",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "select * from piinfo where hostname = {{msg.payload}};",
        "name": "Get data from table",
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "147718afa0135ed8"
            ]
        ]
    },
    {
        "id": "4b10277da6b267a7",
        "type": "inject",
        "z": "53ac84143b97ee93",
        "name": "Manual trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "566397c081cdb9de"
            ]
        ]
    },
    {
        "id": "9d3944a0ef36308f",
        "type": "switch",
        "z": "53ac84143b97ee93",
        "name": "skip 'connect' and 'change'",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 400,
        "y": 260,
        "wires": [
            [],
            [],
            [
                "566397c081cdb9de"
            ]
        ]
    },
    {
        "id": "5ba8e068d5274836",
        "type": "comment",
        "z": "9275e1940cb248fa",
        "name": "Create the 'piinfo' tables",
        "info": "",
        "x": 350,
        "y": 540,
        "wires": []
    },
    {
        "id": "1650944d27ee494d",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "Drop and create the tables",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "e14161e9dd139d52"
            ]
        ]
    },
    {
        "id": "fa429b0eabf404fd",
        "type": "comment",
        "z": "9275e1940cb248fa",
        "g": "579e908f7463658d",
        "name": "This will drop and create the tables. WARNING: running this will wipe out any data already in the tables. ",
        "info": "(Manual) - Run this flow once when installing or if the release notes say \nto upgrade the database.\n\nThe reason this drops and recreates the tables is in the case where new columns\nare being added to one of the tables. \n\n(Yes I know that you could use ALTER but this seems easier to maintain in this case.)",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "8c234f3fd52154a7",
        "type": "debug",
        "z": "9275e1940cb248fa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 520,
        "wires": []
    },
    {
        "id": "126e5c03d4a39db7",
        "type": "catch",
        "z": "9275e1940cb248fa",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "6ae4be90998942ec"
            ]
        ]
    },
    {
        "id": "6ae4be90998942ec",
        "type": "debug",
        "z": "9275e1940cb248fa",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "a6df976952de8e86",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "CREATE TABLE temperature",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE temperature (\n    hostname         TEXT, \n    last_seen        INTEGER,\n    temperature      REAL\n)",
        "output": "str",
        "x": 360,
        "y": 740,
        "wires": [
            [
                "95d944e2b25af77c"
            ]
        ]
    },
    {
        "id": "0dbb4c4af0093d24",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "CREATE TABLE diskspace",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE diskspace (\n    hostname         TEXT, \n    last_seen        INTEGER,\n    disk_size        INTEGER,\n    disk_used        INTEGER,\n    disk_avaliable   INTEGER,\n    disk_percentused TEXT\n)",
        "output": "str",
        "x": 360,
        "y": 700,
        "wires": [
            [
                "95d944e2b25af77c",
                "a6df976952de8e86"
            ]
        ]
    },
    {
        "id": "5a1c86293c9c2272",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "CREATE TABLE memory",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE memory (\n    hostname         TEXT, \n    last_seen        INTEGER,\n    available_mem    INTEGER,\n    buff_cache       INTEGER,\n    free_mem         INTEGER,\n    shared_mem       INTEGER,\n    totalmem         INTEGER,\n    used_mem         INTEGER,\n    free_swap        INTEGER,\n    total_swap       INTEGER,\n    used_swap        INTEGER\n )",
        "output": "str",
        "x": 350,
        "y": 660,
        "wires": [
            [
                "95d944e2b25af77c",
                "0dbb4c4af0093d24"
            ]
        ]
    },
    {
        "id": "683369cf3f24209a",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 740,
        "wires": [
            [
                "a6df976952de8e86"
            ]
        ]
    },
    {
        "id": "a2ba51c972161e22",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 660,
        "wires": [
            [
                "5a1c86293c9c2272"
            ]
        ]
    },
    {
        "id": "865617829006aed8",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 700,
        "wires": [
            [
                "0dbb4c4af0093d24"
            ]
        ]
    },
    {
        "id": "f41a045363efbf56",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "DROP TABLE temperature",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DROP TABLE IF EXISTS temperature;",
        "output": "str",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "bdf72d90c5079554",
                "e18d9df98e6728f0"
            ]
        ]
    },
    {
        "id": "655bedec0a2f9d44",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "DROP TABLE diskspace",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DROP TABLE IF EXISTS diskspace;",
        "output": "str",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "bdf72d90c5079554",
                "f41a045363efbf56"
            ]
        ]
    },
    {
        "id": "8bccfc2a0cc37484",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "DROP TABLE memory",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " DROP TABLE IF EXISTS memory;",
        "output": "str",
        "x": 360,
        "y": 360,
        "wires": [
            [
                "bdf72d90c5079554",
                "655bedec0a2f9d44"
            ]
        ]
    },
    {
        "id": "e14161e9dd139d52",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "DROP TABLE piInfo",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DROP TABLE IF EXISTS piInfo;\n",
        "output": "str",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "bdf72d90c5079554",
                "f504f8a4a34f3999"
            ]
        ]
    },
    {
        "id": "80b1f30b713a89c6",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "f41a045363efbf56"
            ]
        ]
    },
    {
        "id": "113475649f901b00",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 360,
        "wires": [
            [
                "8bccfc2a0cc37484"
            ]
        ]
    },
    {
        "id": "d91dd95905271a6b",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 400,
        "wires": [
            [
                "655bedec0a2f9d44"
            ]
        ]
    },
    {
        "id": "95d944e2b25af77c",
        "type": "link out",
        "z": "9275e1940cb248fa",
        "name": "to process SQL",
        "mode": "link",
        "links": [
            "2b66a9c2d07180f5"
        ],
        "x": 615,
        "y": 660,
        "wires": []
    },
    {
        "id": "2b66a9c2d07180f5",
        "type": "link in",
        "z": "9275e1940cb248fa",
        "name": "process SQL",
        "links": [
            "95d944e2b25af77c",
            "bdf72d90c5079554",
            "db39994054603530"
        ],
        "x": 735,
        "y": 520,
        "wires": [
            [
                "d12616ffa78cd528"
            ]
        ]
    },
    {
        "id": "bdf72d90c5079554",
        "type": "link out",
        "z": "9275e1940cb248fa",
        "name": "to process SQL",
        "mode": "link",
        "links": [
            "2b66a9c2d07180f5"
        ],
        "x": 635,
        "y": 340,
        "wires": []
    },
    {
        "id": "b7f84d38e55bd72b",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from piinfo",
        "x": 350,
        "y": 900,
        "wires": [
            [
                "db39994054603530"
            ]
        ]
    },
    {
        "id": "e3a83b1e08766107",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from memory",
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "db39994054603530"
            ]
        ]
    },
    {
        "id": "789f825d6a594460",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from diskspace",
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "db39994054603530"
            ]
        ]
    },
    {
        "id": "6210cc55b7e6a568",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from temperature",
        "x": 380,
        "y": 1120,
        "wires": [
            [
                "db39994054603530"
            ]
        ]
    },
    {
        "id": "db39994054603530",
        "type": "link out",
        "z": "9275e1940cb248fa",
        "name": "to process SQL",
        "mode": "link",
        "links": [
            "2b66a9c2d07180f5",
            "f7f6500f83bb61d8",
            "5a4472ca5f86d301"
        ],
        "x": 810,
        "y": 1020,
        "wires": [],
        "l": true
    },
    {
        "id": "261a15284e48b502",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE IF EXISTS piInfo;",
        "x": 870,
        "y": 860,
        "wires": [
            [
                "db39994054603530"
            ]
        ]
    },
    {
        "id": "74390a6051245019",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "CREATE TABLE piInfo",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE piInfo (\n    hostname         TEXT PRIMARY KEY, \n    last_seen        INTEGER,\n    ip               TEXT,\n    model            TEXT,\n    osrelease        TEXT,\n    temperature      REAL,\n    uptime           TEXT,\n    disk_percentused TEXT\n)",
        "output": "str",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "95d944e2b25af77c",
                "33c4ce35a6bbb5c7"
            ]
        ]
    },
    {
        "id": "33c4ce35a6bbb5c7",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "CREATE TABLE software",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE software (\n    hostname        TEXT NOT NULL, \n    last_seen       INTEGER,\n    product         TEXT NOT NULL,\n    release         TEXT,\n    PRIMARY KEY(hostname, product)\n)",
        "output": "str",
        "x": 350,
        "y": 620,
        "wires": [
            [
                "95d944e2b25af77c",
                "5a1c86293c9c2272"
            ]
        ]
    },
    {
        "id": "fdd721dd89ee79ec",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 620,
        "wires": [
            [
                "33c4ce35a6bbb5c7"
            ]
        ]
    },
    {
        "id": "ac0474432c49ef26",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "f504f8a4a34f3999"
            ]
        ]
    },
    {
        "id": "f504f8a4a34f3999",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "DROP TABLE software",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " DROP TABLE IF EXISTS software;",
        "output": "str",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "bdf72d90c5079554",
                "8bccfc2a0cc37484"
            ]
        ]
    },
    {
        "id": "0606e2e8077e6446",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from software",
        "x": 360,
        "y": 940,
        "wires": [
            [
                "db39994054603530"
            ]
        ]
    },
    {
        "id": "e18d9df98e6728f0",
        "type": "delay",
        "z": "9275e1940cb248fa",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 580,
        "wires": [
            [
                "74390a6051245019"
            ]
        ]
    },
    {
        "id": "d12616ffa78cd528",
        "type": "sqlite",
        "z": "9275e1940cb248fa",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "process SQLite commands",
        "x": 900,
        "y": 520,
        "wires": [
            [
                "8c234f3fd52154a7"
            ]
        ]
    },
    {
        "id": "a873a0f09f29dbba",
        "type": "inject",
        "z": "9275e1940cb248fa",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 760,
        "y": 420,
        "wires": [
            [
                "dadc3f688660a418"
            ]
        ]
    },
    {
        "id": "dadc3f688660a418",
        "type": "template",
        "z": "9275e1940cb248fa",
        "name": "CREATE DATABASE",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE piInfo (\n    hostname         TEXT PRIMARY KEY, \n    last_seen        INTEGER,\n    ip               TEXT,\n    model            TEXT,\n    osrelease        TEXT,\n    temperature      REAL,\n    disk_percentused TEXT\n)",
        "output": "str",
        "x": 960,
        "y": 420,
        "wires": [
            []
        ]
    }
]
