[
    {
        "id": "5f485e062dc78bcc",
        "type": "tab",
        "label": "Pi-Info gather V0.3.3",
        "disabled": false,
        "info": "v0.2.1 - added code to get node.js version number\n       - added right alignment for versions\nv0.3.0 - clean up code\n\nv0.3.1 - fixed issue where only one item of software was being displayed\nv0.3.2 - fixed php version info and added grafana to the software reported\n\nv0.3.3 - added 'git' version info",
        "env": []
    },
    {
        "id": "c4ddbef3c7b4c989",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "feb7fb4e1a842f5a",
        "type": "tab",
        "label": "Create database",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f5091586d73cdb7",
        "type": "group",
        "z": "5f485e062dc78bcc",
        "name": "",
        "style": {
            "fill": "#ffff7f",
            "label": true
        },
        "nodes": [
            "6194e40ea4cb7401",
            "6fa9a629360e39b8",
            "ab623587755db157",
            "48df7e781c9ea28f",
            "fcdd7c2f0f22aab6",
            "d58c6e91265357e3",
            "9dce12ad2b551cc5",
            "aa0900fbbf720b1b",
            "d9da1b4d654f268f",
            "cecf8537e0334a87",
            "e82c9284c9e256eb",
            "c07f0c842673bc4f",
            "d7ba2e7a7fe33a57",
            "2dd68db2f1f2e7c5",
            "0582db9d1a8d6172",
            "2d5442a5760fbebb",
            "fe9ed741b11f46fd",
            "7b13e38d1831acb1",
            "63d86b9e06e3ab61",
            "22d9689f25be53b3",
            "50b7f46eb29fae57",
            "b11161c1b0933093",
            "a4bd1a6ad85927ea",
            "495e5cb28a71bf40",
            "17ce3d773f9e5087"
        ],
        "x": 74,
        "y": -1,
        "w": 972,
        "h": 382
    },
    {
        "id": "67ac0672a9e813bd",
        "type": "group",
        "z": "5f485e062dc78bcc",
        "name": "",
        "style": {
            "fill": "#ff7f7f",
            "label": true
        },
        "nodes": [
            "a61c86222c63e022",
            "5915b5c8498b6650",
            "c5f92639b96c30cb"
        ],
        "x": 814,
        "y": 439,
        "w": 212,
        "h": 162
    },
    {
        "id": "a45c305e31a9c284",
        "type": "group",
        "z": "5f485e062dc78bcc",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "839aa7f8c25ab6d5",
            "658b15755779cf25",
            "6b11751446374579",
            "4580c3770f462b87",
            "8e2cab98cbb3416f",
            "6587326747cf44c5",
            "1bb50e9f0cc50c5e",
            "34ef594d9f41cec4",
            "4510f6bac14d16a7",
            "17871c018f22da1b",
            "f533176ac7842ee6",
            "cb30d895e50ba973"
        ],
        "x": 94,
        "y": 1179,
        "w": 892,
        "h": 282
    },
    {
        "id": "6d063c17373d5270",
        "type": "group",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "style": {
            "fill": "#ff3f3f",
            "label": true
        },
        "nodes": [
            "c71506966974742f"
        ],
        "x": 154,
        "y": 59,
        "w": 752,
        "h": 82
    },
    {
        "id": "ce8d0c70b33c0823",
        "type": "group",
        "z": "5f485e062dc78bcc",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "d57160dfbd21a0a2",
            "f134c76855d41ae1",
            "57c3f2502f961849",
            "fb1d5bb61132322f",
            "731d3cd6de6f3a33",
            "48ab952841b6f55a",
            "02fdd151761b82f5",
            "574ce6bdb578c561"
        ],
        "x": 154,
        "y": 439,
        "w": 692,
        "h": 222
    },
    {
        "id": "fc280b0a645350ec",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqttpizw.local",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9113425422938f2e",
        "type": "ui_group",
        "name": "show all P's",
        "tab": "4743286be1803569",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d54830887efaf336",
        "type": "sqlitedb",
        "db": "/home/pi/databases/pypi.db",
        "mode": "RWC"
    },
    {
        "id": "4743286be1803569",
        "type": "ui_tab",
        "name": "MainScreen",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "28948acdaad5f246",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8c125b787d0ba58b",
        "type": "ui_tab",
        "name": "HostDetails",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "556d80d4ed6e0469",
        "type": "ui_group",
        "name": "Details",
        "tab": "8c125b787d0ba58b",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6194e40ea4cb7401",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "hostname",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"hostname\": \"hostname\"}",
        "payloadType": "json",
        "x": 720,
        "y": 80,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "6fa9a629360e39b8",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "node-red",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodered\":\"node-red -?\"}",
        "payloadType": "json",
        "x": 380,
        "y": 200,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "ab623587755db157",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "osrelease",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"osrelease\":\"lsb_release -c\"}",
        "payloadType": "json",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "48df7e781c9ea28f",
        "type": "mqtt in",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "",
        "topic": "pypi_info/command/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "fc280b0a645350ec",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 760,
        "y": 340,
        "wires": [
            [
                "fcdd7c2f0f22aab6"
            ]
        ]
    },
    {
        "id": "fcdd7c2f0f22aab6",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 340,
        "wires": []
    },
    {
        "id": "d58c6e91265357e3",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "grafana",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"grafana\": \"grafana-server -v\"}",
        "payloadType": "json",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "9dce12ad2b551cc5",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "netatalk",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"netatalk\": \"netatalk -v\"}",
        "payloadType": "json",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "aa0900fbbf720b1b",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "influx",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"influx\": \"influx -version\"}",
        "payloadType": "json",
        "x": 910,
        "y": 80,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "d9da1b4d654f268f",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "IP",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"ip\": \"hostname -I\"}",
        "payloadType": "json",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "cecf8537e0334a87",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "Date",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"last_seen\":\"date +\\\"%Y-%m-%d %T\\\"\"}",
        "payloadType": "json",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "e82c9284c9e256eb",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "temperature",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"temperature\": \"vcgencmd measure_temp\"}",
        "payloadType": "json",
        "x": 570,
        "y": 260,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "c07f0c842673bc4f",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "memory",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"memory\": \"free\"}",
        "payloadType": "json",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "d7ba2e7a7fe33a57",
        "type": "link out",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "to Run Command",
        "mode": "link",
        "links": [
            "57c3f2502f961849"
        ],
        "x": 390,
        "y": 340,
        "wires": [],
        "l": true
    },
    {
        "id": "2dd68db2f1f2e7c5",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "model",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"model\":\"cat /proc/device-tree/model\"}",
        "payloadType": "json",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "0582db9d1a8d6172",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "mosquitto",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"mosquitto\": \"mosquitto -h\"}",
        "payloadType": "json",
        "x": 740,
        "y": 140,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "2d5442a5760fbebb",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "python3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"python3\": \"python3 --version\"}",
        "payloadType": "json",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "fe9ed741b11f46fd",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "nginx",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nginx\": \"nginx -v\"}",
        "payloadType": "json",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "7b13e38d1831acb1",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "php",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"php\":\"php -v\"}",
        "payloadType": "json",
        "x": 910,
        "y": 200,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "63d86b9e06e3ab61",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "sqlite3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"sqlite3\":\"sqlite3 -version\"}",
        "payloadType": "json",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "839aa7f8c25ab6d5",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "manual run",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1380,
        "wires": [
            [
                "658b15755779cf25"
            ]
        ]
    },
    {
        "id": "22d9689f25be53b3",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "disk",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"disk\": \"df /\"}",
        "payloadType": "json",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "658b15755779cf25",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "Setup data for inserts",
        "func": "let hosts = flow.get(\"hostnames\")||[]\nlet piData = {}\nlet data = {}\nlet mem = {}\nlet disk = {}\nconst d1 = new Date();\n\nhosts.forEach(hostname => {\n   piData = flow.get(hostname)||{}\n   // build the database record\n   msg.hostname          = piData.hostname       \n   data.hostname         = piData.hostname       \n   data.last_seen        = d1.getTime()  \n   data.ip               = piData.ip\n   data.model            = piData.model\n   data.osrelease        = piData.osrelease\n   data.temperature      = piData.temperature\n\n   memory = piData.memory\n   data.mem_available    = memory.mem.available\n   data.mem_buff_cache   = memory.mem.buff_cache\n   data.mem_free         = memory.mem.free       \n   data.mem_shared       = memory.mem.shared\n   data.mem_total        = memory.mem.total\n   data.mem_used         = memory.mem.used\n   data.used_total       = memory.swap.total\n   data.used_free        = memory.swap.free    \n   data.used_swap        = memory.swap.used  \n\n   disk = piData.disk\n   data.disk_size        = disk.size\n   data.disk_used        = disk.used\n   data.disk_avaliable   = disk.avaliable \n   data.disk_percentused = disk.percentused\n\n   data.grafana          = piData.grafana\n   data.influx           = piData.influx\n   data.mosquitto        = piData.mosquitto\n   data.netatalk         = piData.netatalk\n   data.nginx            = piData.nginx\n   data.nodered          = piData.nodered\n   data.php              = piData.php\n   data.python3          = piData.python3\n   data.sqlite3          = piData.sqlite3\n  \n   msg.data = data\n\n // operation\n   node.send(msg)\n});\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1340,
        "wires": [
            [
                "8e2cab98cbb3416f",
                "34ef594d9f41cec4",
                "4510f6bac14d16a7",
                "17871c018f22da1b",
                "58b987a861de2513"
            ]
        ]
    },
    {
        "id": "4580c3770f462b87",
        "type": "link out",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "Go Update Dashboard",
        "mode": "link",
        "links": [
            "eb2e336937ed624b"
        ],
        "x": 860,
        "y": 1400,
        "wires": [],
        "l": true
    },
    {
        "id": "8e2cab98cbb3416f",
        "type": "template",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "REPLACE INTO piInfo",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "REPLACE INTO piInfo (\n    hostname, \n    last_seen,\n    ip,\n    model,\n    osrelease,\n    temperature,\n    uptime,\n    disk_percentused\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n    \"{{data.ip}}\",\n    \"{{data.model}}\",\n    \"{{data.osrelease}}\",\n     {{data.temperature}},\n    \"{{data.uptime}}\",\n    \"{{data.disk.percentused}}\"\n);",
        "output": "str",
        "x": 520,
        "y": 1260,
        "wires": [
            [
                "6b11751446374579",
                "93e59022abb78dea"
            ]
        ]
    },
    {
        "id": "6587326747cf44c5",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a61c86222c63e022",
        "type": "catch",
        "z": "5f485e062dc78bcc",
        "g": "67ac0672a9e813bd",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 920,
        "y": 520,
        "wires": [
            [
                "5915b5c8498b6650"
            ]
        ]
    },
    {
        "id": "5915b5c8498b6650",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "g": "67ac0672a9e813bd",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 560,
        "wires": []
    },
    {
        "id": "1bb50e9f0cc50c5e",
        "type": "link in",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "Load to SQLite",
        "links": [
            "fb1d5bb61132322f"
        ],
        "x": 220,
        "y": 1300,
        "wires": [
            [
                "658b15755779cf25"
            ]
        ],
        "l": true
    },
    {
        "id": "34ef594d9f41cec4",
        "type": "template",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "INSERT INTO memory",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO memory (\n    hostname, \n    last_seen,\n    available_mem,\n    buff_cache,\n    free_mem,\n    shared_mem,\n    totalmem,\n    used_mem,\n    free_swap,\n    total_swap,\n    used_swap\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n     {{data.mem_available}},\n     {{data.mem_buff_cache}},\n     {{data.mem_free}},\n     {{data.mem_shared}},\n     {{data.mem_total}},\n     {{data.mem_used}},\n     {{data.used_total}},\n     {{data.used_free}},\n     {{data.used_swap}}\n);",
        "output": "str",
        "x": 520,
        "y": 1340,
        "wires": [
            [
                "6b11751446374579"
            ]
        ]
    },
    {
        "id": "4510f6bac14d16a7",
        "type": "template",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "INSERT INTO diskspace",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO diskspace (\n    hostname, \n    last_seen,\n    disk_size,\n    disk_used,\n    disk_avaliable,\n    disk_percentused\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n     {{data.disk_size}},\n     {{data.disk_used}},\n     {{data.disk_avaliable}},\n    \"{{data.disk_percentused}}\"\n);",
        "output": "str",
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "6b11751446374579"
            ]
        ]
    },
    {
        "id": "17871c018f22da1b",
        "type": "template",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "INSERT INTO temperature",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO temperature (\n    hostname, \n    last_seen,\n    temperature\n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n     {{data.temperature}}\n)",
        "output": "str",
        "x": 540,
        "y": 1380,
        "wires": [
            [
                "6b11751446374579"
            ]
        ]
    },
    {
        "id": "50b7f46eb29fae57",
        "type": "comment",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "for monitoring out going MQTT msgs",
        "info": "",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "b11161c1b0933093",
        "type": "comment",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "These are the commands for testing",
        "info": "",
        "x": 280,
        "y": 40,
        "wires": []
    },
    {
        "id": "c5f92639b96c30cb",
        "type": "comment",
        "z": "5f485e062dc78bcc",
        "g": "67ac0672a9e813bd",
        "name": "Error Collection",
        "info": "",
        "x": 920,
        "y": 480,
        "wires": []
    },
    {
        "id": "f533176ac7842ee6",
        "type": "comment",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "Get the flow items and create the database inserts and store in tables",
        "info": "",
        "x": 390,
        "y": 1220,
        "wires": []
    },
    {
        "id": "0570b02e3a805150",
        "type": "ui_ui_control",
        "z": "5f485e062dc78bcc",
        "name": "",
        "events": "all",
        "x": 180,
        "y": 1720,
        "wires": [
            [
                "03733be6f8d03811"
            ]
        ]
    },
    {
        "id": "699311816a694900",
        "type": "ui_template",
        "z": "5f485e062dc78bcc",
        "group": "9113425422938f2e",
        "name": "CSS for colors2",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<style>\n    .nr-dashboard-cardpanel {\n        border: 1px solid black;\n    }\n\n    .nr-dashboard-cardpanel > p {\n        text-align: center;\n        color: #000 !important;\n    }\n    .device_offline {\n        xbackground-color: #fcf2ba;\n        xbackground-color: #ff6457;\n        background-color: #ffa0a8;\n    }\n    .device_online {\n        background-color: #dcffcc; \n        color: #000000;\n    }\n    .warning_color {\n        background-color: #f3ffb8;\n    }\n    .warning_red {\n        background-color: #ff0000;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "0dddf9926dd8da14",
        "type": "change",
        "z": "5f485e062dc78bcc",
        "name": "No data available",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No data available",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1720,
        "wires": [
            [
                "ea12c3583f378021"
            ]
        ]
    },
    {
        "id": "30dc076e6da6a658",
        "type": "ui_template",
        "z": "5f485e062dc78bcc",
        "group": "9113425422938f2e",
        "name": "Raspberry Pi devices2",
        "order": 1,
        "width": "12",
        "height": "10",
        "format": "<div id=\"et_home\">\n<h2 style=\"text-align: center;\">PyPI Display Home </h2>\n<p style=\"text-align: center;\">List of Raspberry Pi's found on your LAN<p>\n<p style=\"text-align: center;\">Click on a 'Hostname' will get you details of that device<p>\n<p style=\"text-align: center;\">Click on a 'IP' will attempt to open Node-RED on that Pi<p>\n\n<br/>\n<table id=\"table\" border=\"1\">\n    <tr>\n        <th>Hostname</th> \n        <th>IP</th> \n        <th>Last Seen</th> \n        <th>Model</th>\n        <th>OS</th>\n        <th>Disk Used</th>\n        <th>Temperature</th>\n    </tr>\n    <tbody style=\"text-align: center\">\n        <tr ng-repeat=\"x in msg.payload\">\n            <td ng-if=\"x.device_status ==  'database is empty'\" class=\"warning_red\" >DATABASE IS EMPTY</td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\" style=\"text-align: left\"> \n                <md-button ng-click=\"send({host: x.hostname})\">{{x.hostname}}</md-button>\n            </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" style=\"text-align: left\"> \n                <md-button ng-click=\"send({host: x.hostname})\">{{x.hostname}}</md-button>\n            </td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\" ><a href=\"http://{{x.ip}}:1880\" target=\"_blank\"> {{x.ip}} </a></td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >        {{x.ip}}</td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.last_seen_text}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.last_seen_text}} </td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.model}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.model}} </td>\n\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.osrelease}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.osrelease}} </td>\n\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.disk_percentused}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.disk_percentused}} </td>\n\n            <td ng-if='x.device_status ==  1' class=\"device_online\"  >{{x.temperature}} </td>\n            <td ng-if='x.device_status ==  0' class=\"device_offline\" >{{x.temperature}} </td>\n\n         </tr>\n    </tbody>\n</table>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 440,
        "y": 1800,
        "wires": [
            [
                "cb401f40730115bb",
                "a099a015744110e8"
            ]
        ]
    },
    {
        "id": "ea12c3583f378021",
        "type": "ui_toast",
        "z": "5f485e062dc78bcc",
        "d": true,
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "03733be6f8d03811",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "Setup data for main dashboard",
        "func": "let payloads = msg.payload\n\n// get the list of known hosts \nconst hosts = flow.get(\"hostnames\")||[]\n\nlet data = {}\nlet mem = {}\nlet disk = {}\nconst hostArray =[] // this will be sent to the dashboard\n\n// combine all flow.\"hostname\" objects into one\nhosts.forEach(hostname => {\n    var piData = flow.get(hostname)||{}\n    piData.device_status = 1  // set pi status to active\n\n    // convert last_seen to a string and add it to object\n    let d = new Date(piData.last_seen);\n    let last_seen_time = d.getTime();\n    piData.last_seen_text = d.toLocaleString(\"en-US\")\n\n    // get current time - 5 minutes\n    let interval_limit = new Date().getTime() - 300000;\n\n    // if pi hasn't been seen in over an hour set status out of service\n    if (interval_limit > last_seen_time) piData.device_status = 0\n\n    piData.disk_percentused = piData.disk_percentused\n\n    // push the host data into data array tobe sent to the ui-template\n    hostArray.push(piData)\n    });\n\nmsg.payload = hostArray\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "30dc076e6da6a658"
            ]
        ]
    },
    {
        "id": "242d73396fab4958",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1640,
        "wires": [
            [
                "03733be6f8d03811",
                "f30a56c9baa36f37"
            ]
        ]
    },
    {
        "id": "cb401f40730115bb",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1800,
        "wires": []
    },
    {
        "id": "eb2e336937ed624b",
        "type": "link in",
        "z": "5f485e062dc78bcc",
        "name": "Update Dashboard",
        "links": [
            "4580c3770f462b87",
            "f203c0a72762d6d2",
            "2c32eda9695f32d7",
            "2862d666b212a15f"
        ],
        "x": 210,
        "y": 1680,
        "wires": [
            [
                "0570b02e3a805150"
            ]
        ],
        "l": true
    },
    {
        "id": "aeb5432b5c2c8f55",
        "type": "ui_button",
        "z": "5f485e062dc78bcc",
        "name": "",
        "group": "9113425422938f2e",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1760,
        "wires": [
            [
                "03733be6f8d03811"
            ]
        ]
    },
    {
        "id": "0d829875b68bbc88",
        "type": "mqtt in",
        "z": "5f485e062dc78bcc",
        "name": "",
        "topic": "pypi_info/results/#",
        "qos": "2",
        "datatype": "json",
        "broker": "fc280b0a645350ec",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 720,
        "wires": [
            [
                "fdad584e655c508f",
                "eca0f7655fc22ac8"
            ]
        ]
    },
    {
        "id": "d3eb43a768dbbde3",
        "type": "change",
        "z": "5f485e062dc78bcc",
        "name": "payload = stdout",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.stdout",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 860,
        "wires": [
            [
                "62535e6d8781179e",
                "835657f52c530633"
            ]
        ]
    },
    {
        "id": "62535e6d8781179e",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 940,
        "wires": []
    },
    {
        "id": "a44a9853afac48db",
        "type": "change",
        "z": "5f485e062dc78bcc",
        "name": "payload = not installed",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "not installed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 820,
        "wires": [
            [
                "1193370557e21007"
            ]
        ]
    },
    {
        "id": "43a4f53c2735ffdb",
        "type": "switch",
        "z": "5f485e062dc78bcc",
        "name": "stdout empty?",
        "property": "payload.stdout",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 840,
        "wires": [
            [
                "a44a9853afac48db"
            ],
            [
                "d3eb43a768dbbde3"
            ]
        ]
    },
    {
        "id": "1193370557e21007",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "NOT FOUND",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 760,
        "wires": []
    },
    {
        "id": "8b142d9d4a76cd19",
        "type": "change",
        "z": "5f485e062dc78bcc",
        "name": "set msg.hostname and msg.command",
        "rules": [
            {
                "t": "set",
                "p": "hostname",
                "pt": "msg",
                "to": "payload.hostname",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "payload.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 780,
        "wires": [
            [
                "43a4f53c2735ffdb"
            ]
        ]
    },
    {
        "id": "26bbec5cc897dc70",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "Parsed results",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 820,
        "wires": []
    },
    {
        "id": "74c16f398d13db2e",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "Parse Piinfo",
        "func": "// This function will build a piinfo table entry once all\n// the required data has has been  received\nlet hostname = msg.hostname\nlet command = msg.command\nlet payload = msg.payload\nlet host = flow.get(hostname)||{}\nlet items = 0\n\nif(host.hasOwnProperty(\"ip\")) items++\nif(host.hasOwnProperty(\"model\")) items++\nif(host.hasOwnProperty(\"disk_percentused\")) items++\nif(host.hasOwnProperty(\"uptime\")) items++\nif(host.hasOwnProperty(\"temperature\")) items++\n\n// format commands that have extra text in their responses\nswitch(command) {\n   case \"hostname\":\n        payload = hostname;\n        items--\n        break;\n\n     case \"ip\":\n        payload = payload.replace(/ \\n/g, '');\n        break;\n\n    case \"last_seen\":\n        payload = Date.parse(payload);\n        break;\n\n    case \"model\":\n        payload = payload.slice(0, -1);\n        payload = payload.toString();\n        payload = payload.replace(\"Raspberry \",\"\");\n        break;\n \n    case \"osrelease\":\n        payload = payload.replace('Codename:', '');\n        payload = payload.trim();\n        break;\n \n    case \"temperature\":\n        payload = payload.split(\"=\")[1];\n        payload = payload.replace(/\\n/g,\"\");\n        payload = payload.replace(\"'C\", \"\");\n        payload = parseFloat(payload)\n        break;\n\n    case \"uptime\":\n        payload = payload.replace(/[\\r\\n]+/gm, \"\");\n        break;\n\n    default:\n        break;\n}\n\nconst d1 = new Date();\nhost['last_seen']   = d1.getTime();\nmsg.payload = payload\nhost[command] = payload;\n//node.warn(host)\nflow.set(hostname, host)\nmsg.data = host\n\n//if all items found, write out the piinfo record\nif (items < 5) return\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 820,
        "wires": [
            [
                "26bbec5cc897dc70",
                "8e2cab98cbb3416f"
            ]
        ]
    },
    {
        "id": "191977eb95072ed0",
        "type": "comment",
        "z": "5f485e062dc78bcc",
        "name": "Parse the results returned from MQTT and store ther results in some flow variables",
        "info": "",
        "x": 510,
        "y": 680,
        "wires": []
    },
    {
        "id": "d57160dfbd21a0a2",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "Format MQTT topic/data",
        "func": "const cmds = msg.payload;\n//Object.values(cmds).forEach( cmd => {\n//  msg.product = cmd;\n//  msg.payload = cmd;\n//  node.send(msg);\n//});\nObject.entries(cmds).forEach(entry => {\n  const [software, cmd] = entry;\n  msg.software = software;\n//  msg.payload = cmd;\n  msg.topic = 'pypi_info/command'+\"/\"+msg.software\n  node.send(msg);\n});\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 620,
        "wires": [
            [
                "f134c76855d41ae1",
                "ec7ab345b1a3fc5d"
            ]
        ]
    },
    {
        "id": "f134c76855d41ae1",
        "type": "mqtt out",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fc280b0a645350ec",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "57c3f2502f961849",
        "type": "link in",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "Run Command",
        "links": [
            "d7ba2e7a7fe33a57",
            "4cdb05881444d3b0",
            "ba0b7d70f1c5d115"
        ],
        "x": 320,
        "y": 620,
        "wires": [
            [
                "d57160dfbd21a0a2"
            ]
        ],
        "l": true
    },
    {
        "id": "fb1d5bb61132322f",
        "type": "link out",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "to Load to SQLite",
        "mode": "link",
        "links": [
            "1bb50e9f0cc50c5e"
        ],
        "x": 710,
        "y": 580,
        "wires": [],
        "l": true
    },
    {
        "id": "731d3cd6de6f3a33",
        "type": "comment",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "Publish commands to MQTT so devices with pypi-info installed will reply",
        "info": "",
        "x": 440,
        "y": 480,
        "wires": []
    },
    {
        "id": "48ab952841b6f55a",
        "type": "trigger",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "",
        "op1": "koad to sqlite",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "20",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 580,
        "wires": [
            [
                "fb1d5bb61132322f"
            ]
        ]
    },
    {
        "id": "049add616b3a47c5",
        "type": "switch",
        "z": "5f485e062dc78bcc",
        "name": "payload empty?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 1740,
        "wires": [
            [
                "0dddf9926dd8da14"
            ],
            [
                "30dc076e6da6a658"
            ]
        ]
    },
    {
        "id": "f169b6262831a6d6",
        "type": "comment",
        "z": "5f485e062dc78bcc",
        "name": "Get data from the flow variables and display it on the dashboard",
        "info": "",
        "x": 530,
        "y": 1620,
        "wires": []
    },
    {
        "id": "961465da1905c03a",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "name": "delete FLOW context",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 2020,
        "wires": [
            [
                "512e118a554aab1e"
            ]
        ]
    },
    {
        "id": "512e118a554aab1e",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "",
        "func": "\n// get the list of known hosts \nconst hosts = flow.get(\"hostnames\")||[]\nnode.warn(hosts)\n//let data = {}\n//let mem = {}\n//let disk = {}\n\n// combine all flow.\"hostname\" objects into one\nhosts.forEach(hostname => {\n    var piData = flow.get(hostname)||{}\n    flow.set(hostname, undefined)    \n    \n});\n\nflow.set(\"hostnames\",undefined)\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 2020,
        "wires": [
            [
                "ea23b7b72a9aa748",
                "fe9959a491833bf3"
            ]
        ]
    },
    {
        "id": "7b2b2c67346e6140",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 2020,
        "wires": []
    },
    {
        "id": "ea23b7b72a9aa748",
        "type": "change",
        "z": "5f485e062dc78bcc",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2020,
        "wires": [
            [
                "7b2b2c67346e6140"
            ]
        ]
    },
    {
        "id": "a7317be7ca7a48e3",
        "type": "link out",
        "z": "5f485e062dc78bcc",
        "name": "to Pi Details",
        "mode": "link",
        "links": [
            "903fdb51603f6e96"
        ],
        "x": 830,
        "y": 1840,
        "wires": [],
        "l": true
    },
    {
        "id": "869af44527e0b108",
        "type": "change",
        "z": "5f485e062dc78bcc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"HostDetails\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1840,
        "wires": [
            [
                "a7317be7ca7a48e3"
            ]
        ]
    },
    {
        "id": "a099a015744110e8",
        "type": "switch",
        "z": "5f485e062dc78bcc",
        "name": "",
        "property": "host",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "undefined",
                "vt": "undefined"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 1840,
        "wires": [
            [],
            [
                "869af44527e0b108"
            ]
        ]
    },
    {
        "id": "cb30d895e50ba973",
        "type": "template",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "name": "REPLACE INTO software",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "REPLACE INTO software (\n    hostname, \n    last_seen,\n    product,\n    release              \n    )\nVALUES (\n    \"{{data.hostname}}\",\n     {{data.last_seen}},\n    \"{{data.product}}\",\n    \"{{data.release}}\"\n);",
        "output": "str",
        "x": 530,
        "y": 1420,
        "wires": [
            [
                "6b11751446374579"
            ]
        ]
    },
    {
        "id": "58b987a861de2513",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1500,
        "wires": []
    },
    {
        "id": "835657f52c530633",
        "type": "switch",
        "z": "5f485e062dc78bcc",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "results/hostname",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/ip",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/last_seen",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/uptime",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/model",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/osrelease",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/disk",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/memory",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "results/temperature",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 10,
        "x": 670,
        "y": 860,
        "wires": [
            [
                "74c16f398d13db2e"
            ],
            [
                "74c16f398d13db2e"
            ],
            [
                "74c16f398d13db2e"
            ],
            [
                "74c16f398d13db2e",
                "dee84253b03a8b3d"
            ],
            [
                "74c16f398d13db2e"
            ],
            [
                "74c16f398d13db2e"
            ],
            [
                "714291008366937c"
            ],
            [
                "7e3bf793eda11a32"
            ],
            [
                "95e4fcf9154e98c0"
            ],
            [
                "133310cc414df644"
            ]
        ]
    },
    {
        "id": "30a1e3300b66a76d",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "SOFTWARE",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 940,
        "wires": []
    },
    {
        "id": "133310cc414df644",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "Parse Software",
        "func": "// prep to store in software table\nlet release = msg.payload\n//let topic = msg.topic\nlet product = msg.command\n//let command = topic.split('/')[2]\nlet data = {}\n\n// extract release from results that have extra text in their responses\nswitch(product) {\n   case \"git\":\n        release = release.split(\" \");\n        release = release[2].replace('\\n','');\n        break;\n\n   case \"grafana\":\n        release = release.split(\"(\");\n        release = release[0].split(\" \");\n        release = release[1];\n        break;\n\n   case \"influx\":\n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" \")[3];\n        break;\n\n    case \"mosquitto\":\n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" \")[2];\n        break;\n \n    case \"netatalk\": \n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" -\")[0];\n        release = release.replace('netatalk ', '');\n        break;\n\n    case \"nodered\": \n        release = release.replace(/\\n/g,\" \");\n        release = release.split(\" \")[1];\n        release = release.replace(\"v\",\"\");\n        break;\n\n    case \"nodejs\": \n        release = release.replace(/\\n/g,\"\");\n//        release = release.split(\" \")[1];\n        release = release.replace(\"v\",\"\");\n        break;\n\n    case \"osrelease\":\n        release = release.replace('Codename:', '');\n        release = release.trim();\n        break;\n \n    case \"php\":\n        release = release.replace(/\\n/g, '');\n        release = release.split(\" \")[1];\n        release = release.split(\"~\")[0];\n        break;\n \n    case \"python3\":\n        release = release.replace(/\\n/g, '');\n        release = release.replace('Python ', '');\n        break;\n \n    case \"sqlite3\":\n        release = release.split(\" \")[0];\n        break;\n\n    default:\n        break;\n}\n\nconst d1 = new Date();\n\nmsg.payload = ''\ndata.hostname = msg.hostname\ndata.last_seen = d1.getTime();\ndata.product  = msg.command\ndata.release  = release\n\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 980,
        "wires": [
            [
                "30a1e3300b66a76d",
                "cb30d895e50ba973"
            ]
        ]
    },
    {
        "id": "714291008366937c",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "Parse Disk Space",
        "func": "// memory to store in DB\nlet payload = msg.payload\nlet data = {}\ndata.hostname = msg.hostname\nlet host = flow.get(msg.hostname)||{}\n\npayload               = payload.replace(/  +/g, ' ');\npayload               = payload.split(\" \");\ndata.disk_size        = parseInt(payload[7]);\ndata.disk_used        = parseInt(payload[8]);\ndata.disk_avaliable   = parseInt(payload[9]);\ndata.disk_percentused = payload[10];\n\nconst d1 = new Date();\nlet last_seen = d1.getTime();\ndata.last_seen   = last_seen\nhost.disk_percentused = payload[10]\n\nflow.set(msg.hostname, host)\n\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 860,
        "wires": [
            [
                "4510f6bac14d16a7",
                "924cb49b76863651"
            ]
        ]
    },
    {
        "id": "7e3bf793eda11a32",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "Parse Memory",
        "func": "// model to store in DB\nlet data = {}\nlet payload = msg.payload\n\ndata.hostname = msg.hostname\nconst d1 = new Date();\ndata.last_seen   = d1.getTime();\n\npayload = payload.replace(/\\n/g,\" \");\npayload = payload.replace(/  +/g, ' ');\npayload = payload.split(\" \");\ndata.mem_total      = parseInt(payload[8]);\ndata.mem_used       = parseInt(payload[9]);\ndata.mem_free       = parseInt(payload[10]);\ndata.mem_shared     = parseInt(payload[11]);\ndata.mem_buff_cache = parseInt(payload[12]);\ndata.mem_available  = parseInt(payload[13]);\ndata.used_total     = parseInt(payload[15]);\ndata.used_free      = parseInt(payload[16]);\ndata.used_swap      = parseInt(payload[17]);\n\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 900,
        "wires": [
            [
                "34ef594d9f41cec4",
                "924cb49b76863651"
            ]
        ]
    },
    {
        "id": "93e59022abb78dea",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "PIINFO",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1140,
        "wires": []
    },
    {
        "id": "95e4fcf9154e98c0",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "Parse Temperature",
        "func": "// prep to store in software table\nlet payload = msg.payload\nlet data = {}\nlet hostname = msg.hostname\nlet host = flow.get(hostname)||{}\n\npayload = payload.split(\"=\")[1];\npayload = payload.replace(/\\n/g,\"\");\npayload = payload.replace(\"'C\", \"\");\npayload = parseFloat(payload)\n \n\nconst d1 = new Date();\n//msg.payload = ''\ndata.hostname    = msg.hostname\ndata.last_seen   = d1.getTime();\ndata.temperature = payload\nhost.temperature = payload\nflow.set(hostname, host)\nmsg.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 940,
        "wires": [
            [
                "17871c018f22da1b"
            ]
        ]
    },
    {
        "id": "924cb49b76863651",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 900,
        "wires": []
    },
    {
        "id": "dee84253b03a8b3d",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 980,
        "wires": []
    },
    {
        "id": "ca5126ed407d8059",
        "type": "link call",
        "z": "5f485e062dc78bcc",
        "name": "",
        "links": [
            "84786ba3a93fab15"
        ],
        "timeout": "30",
        "x": 610,
        "y": 1660,
        "wires": [
            [
                "40b8a39710f5f2b5"
            ]
        ]
    },
    {
        "id": "2e1965f8b492ac30",
        "type": "link out",
        "z": "5f485e062dc78bcc",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 820,
        "y": 1940,
        "wires": [],
        "l": true
    },
    {
        "id": "84786ba3a93fab15",
        "type": "link in",
        "z": "5f485e062dc78bcc",
        "name": "SQL",
        "links": [],
        "x": 190,
        "y": 1940,
        "wires": [
            [
                "56067af27aa5ae1b"
            ]
        ],
        "l": true
    },
    {
        "id": "f30a56c9baa36f37",
        "type": "change",
        "z": "5f485e062dc78bcc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from piinfo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1660,
        "wires": [
            [
                "ca5126ed407d8059"
            ]
        ]
    },
    {
        "id": "40b8a39710f5f2b5",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1660,
        "wires": []
    },
    {
        "id": "02fdd151761b82f5",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "Device info (5 min)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"disk\":\"df /\",\"last_seen\":\"date +\\\"%Y-%m-%d %T\\\"\",\"hostname\":\"hostname\",\"ip\":\"hostname -I\",\"memory\":\"free\",\"model\":\"cat /proc/device-tree/model\",\"osrelease\":\"lsb_release -c\",\"temperature\":\"vcgencmd measure_temp\",\"uptime\":\"uptime -p\"}",
        "payloadType": "json",
        "x": 290,
        "y": 520,
        "wires": [
            [
                "d57160dfbd21a0a2"
            ]
        ]
    },
    {
        "id": "fe9959a491833bf3",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 2100,
        "wires": []
    },
    {
        "id": "574ce6bdb578c561",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "ce8d0c70b33c0823",
        "name": "all commands (1 HR)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"disk\":\"df /\",\"last_seen\":\"date +\\\"%Y-%m-%d %T\\\"\",\"git\":\"git --version\",\"grafana\":\"grafana-server -v\",\"hostname\":\"hostname\",\"influx\":\"influx -version\",\"ip\":\"hostname -I\",\"memory\":\"free\",\"model\":\"cat /proc/device-tree/model\",\"mosquitto\":\"mosquitto -h\",\"netatalk\":\"netatalk -v\",\"nginx\":\"nginx -v\",\"nodered\":\"node-red -?\",\"nodejs\":\"node -v\",\"osrelease\":\"lsb_release -c\",\"php\":\"php -v\",\"python3\":\"python3 --version\",\"sqlite3\":\"sqlite3 -version\",\"temperature\":\"vcgencmd measure_temp\",\"uptime\":\"uptime -p\"}",
        "payloadType": "json",
        "x": 290,
        "y": 560,
        "wires": [
            [
                "d57160dfbd21a0a2"
            ]
        ]
    },
    {
        "id": "6b11751446374579",
        "type": "sqlite",
        "z": "5f485e062dc78bcc",
        "g": "a45c305e31a9c284",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Replace/Insert nodes",
        "x": 860,
        "y": 1340,
        "wires": [
            [
                "4580c3770f462b87",
                "6587326747cf44c5"
            ]
        ]
    },
    {
        "id": "56067af27aa5ae1b",
        "type": "sqlite",
        "z": "5f485e062dc78bcc",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "select * from piinfo where hostname = {{msg.payload}};",
        "name": "SQL processor",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "2e1965f8b492ac30"
            ]
        ]
    },
    {
        "id": "a4bd1a6ad85927ea",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "nodejs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"nodejs\":\"node -v\"}",
        "payloadType": "json",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "495e5cb28a71bf40",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "uptime",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"uptime\": \"uptime -p\"}",
        "payloadType": "json",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "d7ba2e7a7fe33a57",
                "45b6473129dac7c8"
            ]
        ]
    },
    {
        "id": "a8443f7abba10aba",
        "type": "function",
        "z": "5f485e062dc78bcc",
        "name": "Build flow.hostnames array",
        "func": "// get the hostnames array from context\nlet hostnames = flow.get('hostnames')||[]\n\n// get current hostname\nlet hostname = msg.payload.hostname\n\n// push the current name onto the array\nhostnames.push(hostname);\nhostnames.sort();\n\n// remove duplicate hostnames\nlet uniqueNames = [...new Set(hostnames)];\n\n// save the hostnames array)\nflow.set('hostnames', uniqueNames)\nhostnames = flow.get('hostnames')\n\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "fdad584e655c508f",
        "type": "switch",
        "z": "5f485e062dc78bcc",
        "name": "",
        "property": "payload.command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "dir",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "tar",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hostname",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 490,
        "y": 720,
        "wires": [
            [
                "a23badf739f22c6b"
            ],
            [
                "4c915de405444c8c"
            ],
            [
                "a8443f7abba10aba",
                "8b142d9d4a76cd19"
            ],
            [
                "8b142d9d4a76cd19"
            ]
        ]
    },
    {
        "id": "4c915de405444c8c",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 740,
        "wires": []
    },
    {
        "id": "a23badf739f22c6b",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 700,
        "wires": []
    },
    {
        "id": "658149d29f2b2f80",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "name": "",
        "props": [
            {
                "p": "payload.hostname",
                "v": "unusedpi",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 810,
        "y": 760,
        "wires": [
            [
                "a8443f7abba10aba"
            ]
        ]
    },
    {
        "id": "17ce3d773f9e5087",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "g": "1f5091586d73cdb7",
        "name": "git",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"git\": \"git --version\"}",
        "payloadType": "json",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "d7ba2e7a7fe33a57"
            ]
        ]
    },
    {
        "id": "ec7ab345b1a3fc5d",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 660,
        "wires": []
    },
    {
        "id": "45b6473129dac7c8",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 400,
        "wires": []
    },
    {
        "id": "a2c0bf4f5a6e400c",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 400,
        "wires": [
            [
                "45b6473129dac7c8"
            ]
        ]
    },
    {
        "id": "2e19962c31ddd1f9",
        "type": "inject",
        "z": "5f485e062dc78bcc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"users\": \"cat /etc/passwd\"}",
        "payloadType": "json",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "d57160dfbd21a0a2"
            ]
        ]
    },
    {
        "id": "eca0f7655fc22ac8",
        "type": "debug",
        "z": "5f485e062dc78bcc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 940,
        "wires": []
    },
    {
        "id": "0c99b846d819e585",
        "type": "comment",
        "z": "c4ddbef3c7b4c989",
        "name": "This flow grabs the stored data and displays it.",
        "info": "",
        "x": 440,
        "y": 120,
        "wires": []
    },
    {
        "id": "734195eefb23e1ab",
        "type": "ui_ui_control",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "events": "all",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "8427576129d14cd9",
                "b31ae47fb9d4a539"
            ]
        ]
    },
    {
        "id": "9f4171ea7206edbd",
        "type": "ui_template",
        "z": "c4ddbef3c7b4c989",
        "group": "556d80d4ed6e0469",
        "name": "CSS for Pi details",
        "order": 22,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .version {\n        text-align: right;\n    }\n    .nr-dashboard-cardpanel {\n        border: 1px solid black;\n    }\n\n    #Home_Enter_the_IP_of_a_GHOST_device_and_press_DELETE_to_delete_it .nr-dashboard-cardcontainer > .visible,\n    #Home_Enter_the_IP_of_a_GHOST_device_and_press_DELETE_to_delete_it {\n        background-color: #ff9393 !important;\n        test-align: center;\n    }\n    .nr-dashboard-cardpanel > p {\n        text-align: center;\n        color: #000 !important;\n    }\n    .offline {\n        text-align: center;\n        background-color: #ffa0a8 !important;\n    }\n    .device_offline {\n        xbackground-color: #fcf2ba;\n        xbackground-color: #ff6457;\n        background-color: #ffa0a8;\n    }\n    .device_online {\n        background-color: #dcffcc; \n        color: #000000;\n    }\n    .warning_color {\n        background-color: #f3ffb8;\n    }\n    .warning_red {\n        background-color: #ff0000;\n    }\n    .bold-this {\n        font-weight: bold;\n    }\n    .center-this {\n        text-align: center;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 350,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "3192703242c4ab5b",
        "type": "ui_template",
        "z": "c4ddbef3c7b4c989",
        "group": "556d80d4ed6e0469",
        "name": "Show Pi details",
        "order": 2,
        "width": "8",
        "height": 10,
        "format": "\n<div id=\"et_home\">\n<h2 style=\"text-align: center; text-transform: uppercase;\">{{msg.host}} </h2>\n<p style=\"text-align: center;\">Details for <span class=\"hostname\">{{msg.host}}</span> found on your LAN<p>\n\n<h2 style=\"text-align: center;  background-color: #ffa0a8 !important;\" ng-if='msg.piinfo[0].device_status ==  0' >OFFLINE</h2>\n\n<div style=\"text-align: center;\"> <span class=\"bold-this\">{{msg.piinfo[0].model}}</span> running <span class=\"bold-this\">{{msg.piinfo[0].osrelease}}</span>\n<br/> last seen <span class=\"bold-this\">{{msg.piinfo[0].last_seen_text}}</span>  \n<br/>  <span class=\"bold-this\">{{msg.piinfo[0].uptime}}</span>. \n<br/>Temperature <span class=\"bold-this\">{{msg.piinfo[0].temperature}}C</span> and used <span class=\"bold-this\">{{msg.diskspace[0].disk_percentused}}</span> of it's storage.\n</div>\n<br>\n<table id=\"table\" border=\"1\" style=\"margin-left: auto; margin-right: auto;\">\n<caption class=\"bold-this\">Installed Software</caption>\n<tbody style=\"text-align: center\">\n    <tr>\n        <th>Product</th> \n        <th>Version</th> \n    </tr>\n    <tbody style=\"text-align: left\">\n        <tr ng-repeat=\"x in msg.software\">\n            <td ng-if='msg.piinfo[0].device_status ==  1' class=\"device_online\"  >{{x.product}} </td>\n            <td ng-if='msg.piinfo[0].device_status ==  0' class=\"device_offline\" >{{x.product}} </td>\n\n            <td ng-if='msg.piinfo[0].device_status ==  1' class=\"version device_online\"  >{{x.release}} </td>\n            <td ng-if='msg.piinfo[0].device_status ==  0' class=\"version device_offline\" >{{x.release}} </td>\n         </tr>\n    </tbody>\n</table>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 680,
        "wires": [
            [
                "3bf7e8d1c017b182"
            ]
        ]
    },
    {
        "id": "5b8acf9663cdbc60",
        "type": "function",
        "z": "c4ddbef3c7b4c989",
        "name": "Setup data for Details ",
        "func": "let piinfo = msg.piinfo[0]\n\n// convert last_seen to a string and add it to object\nlet d = new Date(piinfo.last_seen);\npiinfo.last_seen_text = d.toLocaleString(\"en-US\")\n\n// get current time - 10 minutes\n//let interval_limit = new Date().getTime() - 600000;\nlet interval_limit = new Date().getTime() - 350000; //little over 5 minutes\n\npiinfo.device_status = 1\n\n// if pi hasn't been seen in more than the interval, set status out of service\nif (interval_limit > piinfo.last_seen) piinfo.device_status = 0\n\n\nmsg.piinfo[0] = piinfo\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 620,
        "wires": [
            [
                "e5c96e9da8edbd9d",
                "3192703242c4ab5b"
            ]
        ]
    },
    {
        "id": "3bf7e8d1c017b182",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 680,
        "wires": []
    },
    {
        "id": "7bf10a0eac722154",
        "type": "ui_button",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "group": "556d80d4ed6e0469",
        "order": 23,
        "width": "8",
        "height": "1",
        "passthru": false,
        "label": "Return",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"tab\":\"MainScreen\"}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 900,
        "wires": [
            [
                "f203c0a72762d6d2"
            ]
        ]
    },
    {
        "id": "e37238aed9f45bb1",
        "type": "catch",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 820,
        "y": 80,
        "wires": [
            [
                "3c401465dc08a3c8"
            ]
        ]
    },
    {
        "id": "3c401465dc08a3c8",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "e5c96e9da8edbd9d",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 620,
        "wires": []
    },
    {
        "id": "9f314facdb870efb",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "piInfo",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "piInfo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "ae01cd28e6291df7"
            ]
        ]
    },
    {
        "id": "903fdb51603f6e96",
        "type": "link in",
        "z": "c4ddbef3c7b4c989",
        "name": "Pi Details",
        "links": [
            "a7317be7ca7a48e3"
        ],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "4db94395a404a129",
                "734195eefb23e1ab",
                "9f314facdb870efb"
            ]
        ],
        "l": true
    },
    {
        "id": "8427576129d14cd9",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "9f2cb24f15eea024",
        "type": "link out",
        "z": "c4ddbef3c7b4c989",
        "name": "sqlnode return",
        "mode": "return",
        "links": [],
        "x": 940,
        "y": 1060,
        "wires": [],
        "l": true
    },
    {
        "id": "ae01cd28e6291df7",
        "type": "link call",
        "z": "c4ddbef3c7b4c989",
        "name": "call sql node",
        "links": [
            "53b5921cb08c5e83"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 320,
        "wires": [
            [
                "effbf91fcb3fd62c"
            ]
        ]
    },
    {
        "id": "53b5921cb08c5e83",
        "type": "link in",
        "z": "c4ddbef3c7b4c989",
        "name": "sqlnode",
        "links": [],
        "x": 310,
        "y": 1060,
        "wires": [
            [
                "2bc160383d88bbdb"
            ]
        ],
        "l": true
    },
    {
        "id": "effbf91fcb3fd62c",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "piinfo",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 320,
        "wires": [
            [
                "be2aaf2505c9ccd2",
                "f1140d4671eb769b"
            ]
        ]
    },
    {
        "id": "be2aaf2505c9ccd2",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "2e163ab404c73f72",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "memory",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "memory",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 440,
        "wires": [
            [
                "4569422f910f9061"
            ]
        ]
    },
    {
        "id": "4569422f910f9061",
        "type": "link call",
        "z": "c4ddbef3c7b4c989",
        "name": "call sql node",
        "links": [
            "53b5921cb08c5e83"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "064ba9470fd1af31"
            ]
        ]
    },
    {
        "id": "064ba9470fd1af31",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "memory",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 440,
        "wires": [
            [
                "e2949006341692d9",
                "4243d6d8dd5c6747"
            ]
        ]
    },
    {
        "id": "e2949006341692d9",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 440,
        "wires": []
    },
    {
        "id": "f1140d4671eb769b",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "diskspace",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "diskspace",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "60658b6c2f4a150b"
            ]
        ]
    },
    {
        "id": "60658b6c2f4a150b",
        "type": "link call",
        "z": "c4ddbef3c7b4c989",
        "name": "call sql node",
        "links": [
            "53b5921cb08c5e83"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 380,
        "wires": [
            [
                "a42307737d19bd16"
            ]
        ]
    },
    {
        "id": "a42307737d19bd16",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "diskspace",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 380,
        "wires": [
            [
                "0b1f71fe1c0ec572",
                "2e163ab404c73f72"
            ]
        ]
    },
    {
        "id": "0b1f71fe1c0ec572",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "4243d6d8dd5c6747",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "temperature",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "temperature",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "ASC LIMIT 1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "105cdb84a63aa846"
            ]
        ]
    },
    {
        "id": "105cdb84a63aa846",
        "type": "link call",
        "z": "c4ddbef3c7b4c989",
        "name": "call sql node",
        "links": [
            "53b5921cb08c5e83"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 500,
        "wires": [
            [
                "294b02f334ebb62c"
            ]
        ]
    },
    {
        "id": "294b02f334ebb62c",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperature",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 500,
        "wires": [
            [
                "a954c53d6a6514e1",
                "a22ce911db1432ab"
            ]
        ]
    },
    {
        "id": "a954c53d6a6514e1",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "2bc160383d88bbdb",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "build SQL statement",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "select * from qaz1 where hostname = \"qaz2\" ORDER BY last_seen qaz3",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "qaz1",
                "fromt": "str",
                "to": "table",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "qaz2",
                "fromt": "str",
                "to": "host",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "topic",
                "pt": "msg",
                "from": "qaz3",
                "fromt": "str",
                "to": "limit",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1060,
        "wires": [
            [
                "90d8b9f2d90bf324",
                "6e10e6aa405dc9ec"
            ]
        ]
    },
    {
        "id": "4db94395a404a129",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 160,
        "wires": []
    },
    {
        "id": "f203c0a72762d6d2",
        "type": "link out",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "mode": "link",
        "links": [
            "eb2e336937ed624b"
        ],
        "x": 445,
        "y": 900,
        "wires": []
    },
    {
        "id": "a22ce911db1432ab",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "software",
        "rules": [
            {
                "t": "set",
                "p": "table",
                "pt": "msg",
                "to": "software",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "limit",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 560,
        "wires": [
            [
                "d3e76bb102a33e94",
                "d0336464fca0dedb"
            ]
        ]
    },
    {
        "id": "d3e76bb102a33e94",
        "type": "link call",
        "z": "c4ddbef3c7b4c989",
        "name": "call sql node",
        "links": [
            "53b5921cb08c5e83"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 560,
        "wires": [
            [
                "0952dd7321cb7935"
            ]
        ]
    },
    {
        "id": "0952dd7321cb7935",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "software",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 560,
        "wires": [
            [
                "484c32c11eca7863",
                "5b8acf9663cdbc60"
            ]
        ]
    },
    {
        "id": "484c32c11eca7863",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 560,
        "wires": []
    },
    {
        "id": "ddf8ae6f12383d94",
        "type": "comment",
        "z": "c4ddbef3c7b4c989",
        "name": "Get data from table",
        "info": "",
        "x": 350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "90d8b9f2d90bf324",
        "type": "sqlite",
        "z": "c4ddbef3c7b4c989",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "select * from piinfo where hostname = {{msg.payload}};",
        "name": "Get data from table",
        "x": 730,
        "y": 1060,
        "wires": [
            [
                "9f2cb24f15eea024"
            ]
        ]
    },
    {
        "id": "eddc8f40003847db",
        "type": "inject",
        "z": "c4ddbef3c7b4c989",
        "name": "Manual trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "9f314facdb870efb"
            ]
        ]
    },
    {
        "id": "b31ae47fb9d4a539",
        "type": "switch",
        "z": "c4ddbef3c7b4c989",
        "name": "skip 'connect' and 'change'",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connect",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 400,
        "y": 260,
        "wires": [
            [],
            [],
            [
                "9f314facdb870efb"
            ]
        ]
    },
    {
        "id": "6e10e6aa405dc9ec",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 980,
        "wires": []
    },
    {
        "id": "d0336464fca0dedb",
        "type": "debug",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 760,
        "wires": []
    },
    {
        "id": "04ea442125d2eb48",
        "type": "change",
        "z": "c4ddbef3c7b4c989",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "software",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "table",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "limit",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "a2bea571e56fd323",
        "type": "comment",
        "z": "feb7fb4e1a842f5a",
        "name": "Create the 'piinfo' tables",
        "info": "",
        "x": 350,
        "y": 540,
        "wires": []
    },
    {
        "id": "e36afa5457ba41e2",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "Drop and create the tables",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "d14f0d537ec40f84"
            ]
        ]
    },
    {
        "id": "c71506966974742f",
        "type": "comment",
        "z": "feb7fb4e1a842f5a",
        "g": "6d063c17373d5270",
        "name": "This will drop and create the tables. WARNING: running this will wipe out any data already in the tables. ",
        "info": "(Manual) - Run this flow once when installing or if the release notes say \nto upgrade the database.\n\nThe reason this drops and recreates the tables is in the case where new columns\nare being added to one of the tables. \n\n(Yes I know that you could use ALTER but this seems easier to maintain in this case.)",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "80816f34f9a125cf",
        "type": "catch",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "7b13611d76fa2153"
            ]
        ]
    },
    {
        "id": "7b13611d76fa2153",
        "type": "debug",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 320,
        "wires": []
    },
    {
        "id": "f7b23055bbd57379",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "CREATE TABLE temperature",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE temperature (\n    hostname         TEXT, \n    last_seen        INTEGER,\n    temperature      REAL\n)",
        "output": "str",
        "x": 360,
        "y": 740,
        "wires": [
            [
                "40d9bc62e21d7b88"
            ]
        ]
    },
    {
        "id": "8f88b8f82144bd54",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "CREATE TABLE diskspace",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE diskspace (\n    hostname         TEXT, \n    last_seen        INTEGER,\n    disk_size        INTEGER,\n    disk_used        INTEGER,\n    disk_avaliable   INTEGER,\n    disk_percentused TEXT\n)",
        "output": "str",
        "x": 360,
        "y": 700,
        "wires": [
            [
                "40d9bc62e21d7b88",
                "f7b23055bbd57379"
            ]
        ]
    },
    {
        "id": "1e514740e3cfa91d",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "CREATE TABLE memory",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE memory (\n    hostname         TEXT, \n    last_seen        INTEGER,\n    available_mem    INTEGER,\n    buff_cache       INTEGER,\n    free_mem         INTEGER,\n    shared_mem       INTEGER,\n    totalmem         INTEGER,\n    used_mem         INTEGER,\n    free_swap        INTEGER,\n    total_swap       INTEGER,\n    used_swap        INTEGER\n )",
        "output": "str",
        "x": 350,
        "y": 660,
        "wires": [
            [
                "40d9bc62e21d7b88",
                "8f88b8f82144bd54"
            ]
        ]
    },
    {
        "id": "644c3d7eb9c4bfea",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 740,
        "wires": [
            [
                "f7b23055bbd57379"
            ]
        ]
    },
    {
        "id": "08b73a08df688da4",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 660,
        "wires": [
            [
                "1e514740e3cfa91d"
            ]
        ]
    },
    {
        "id": "62ef72f107b51de8",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 700,
        "wires": [
            [
                "8f88b8f82144bd54"
            ]
        ]
    },
    {
        "id": "fa230f46649e69b1",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "DROP TABLE temperature",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DROP TABLE IF EXISTS temperature;",
        "output": "str",
        "x": 380,
        "y": 440,
        "wires": [
            [
                "51e5642629afa8e2",
                "1df22b317e369507"
            ]
        ]
    },
    {
        "id": "2913bbd417f4cf31",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "DROP TABLE diskspace",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DROP TABLE IF EXISTS diskspace;",
        "output": "str",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "51e5642629afa8e2",
                "fa230f46649e69b1"
            ]
        ]
    },
    {
        "id": "766d4137cbba6c2e",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "DROP TABLE memory",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " DROP TABLE IF EXISTS memory;",
        "output": "str",
        "x": 360,
        "y": 360,
        "wires": [
            [
                "51e5642629afa8e2",
                "2913bbd417f4cf31"
            ]
        ]
    },
    {
        "id": "d14f0d537ec40f84",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "DROP TABLE piInfo",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DROP TABLE IF EXISTS piInfo;\n",
        "output": "str",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "51e5642629afa8e2",
                "133338dfebf44d5e"
            ]
        ]
    },
    {
        "id": "a085811d5c1e37f9",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "fa230f46649e69b1"
            ]
        ]
    },
    {
        "id": "a90ec931afb89931",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 360,
        "wires": [
            [
                "766d4137cbba6c2e"
            ]
        ]
    },
    {
        "id": "b6e703f1dab9bd95",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 400,
        "wires": [
            [
                "2913bbd417f4cf31"
            ]
        ]
    },
    {
        "id": "40d9bc62e21d7b88",
        "type": "link out",
        "z": "feb7fb4e1a842f5a",
        "name": "to process SQL",
        "mode": "link",
        "links": [
            "867a346715b59eee"
        ],
        "x": 615,
        "y": 660,
        "wires": []
    },
    {
        "id": "867a346715b59eee",
        "type": "link in",
        "z": "feb7fb4e1a842f5a",
        "name": "process SQL",
        "links": [
            "40d9bc62e21d7b88",
            "51e5642629afa8e2",
            "fdc18ab65962654d"
        ],
        "x": 735,
        "y": 520,
        "wires": [
            [
                "d6be067405fe1b60"
            ]
        ]
    },
    {
        "id": "51e5642629afa8e2",
        "type": "link out",
        "z": "feb7fb4e1a842f5a",
        "name": "to process SQL",
        "mode": "link",
        "links": [
            "867a346715b59eee"
        ],
        "x": 635,
        "y": 340,
        "wires": []
    },
    {
        "id": "a6771d797c5eccaa",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from piinfo",
        "x": 350,
        "y": 900,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "adfe0ba1be216270",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from memory",
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "7d0397be262a4fdd",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from diskspace",
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "86103fac74cac8b7",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from temperature",
        "x": 350,
        "y": 1120,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "fdc18ab65962654d",
        "type": "link out",
        "z": "feb7fb4e1a842f5a",
        "name": "to process SQL",
        "mode": "link",
        "links": [
            "867a346715b59eee",
            "f7f6500f83bb61d8",
            "5a4472ca5f86d301"
        ],
        "x": 810,
        "y": 1020,
        "wires": [],
        "l": true
    },
    {
        "id": "0729fbf1b5d40550",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "DROP TABLE IF EXISTS piInfo;",
        "x": 870,
        "y": 860,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "173665859fd3d13d",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "CREATE TABLE piInfo",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE piInfo (\n    hostname         TEXT PRIMARY KEY, \n    last_seen        INTEGER,\n    ip               TEXT,\n    model            TEXT,\n    osrelease        TEXT,\n    temperature      REAL,\n    uptime           TEXT,\n    disk_percentused TEXT\n)",
        "output": "str",
        "x": 340,
        "y": 580,
        "wires": [
            [
                "40d9bc62e21d7b88",
                "254569396f367643"
            ]
        ]
    },
    {
        "id": "254569396f367643",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "CREATE TABLE software",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE software (\n    hostname        TEXT NOT NULL, \n    last_seen       INTEGER,\n    product         TEXT NOT NULL,\n    release         TEXT,\n    PRIMARY KEY(hostname, product)\n)",
        "output": "str",
        "x": 350,
        "y": 620,
        "wires": [
            [
                "40d9bc62e21d7b88",
                "1e514740e3cfa91d"
            ]
        ]
    },
    {
        "id": "57cd2385ccb68882",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 620,
        "wires": [
            [
                "254569396f367643"
            ]
        ]
    },
    {
        "id": "ac4ef9db835067f5",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "133338dfebf44d5e"
            ]
        ]
    },
    {
        "id": "133338dfebf44d5e",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "DROP TABLE software",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " DROP TABLE IF EXISTS software;",
        "output": "str",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "51e5642629afa8e2",
                "766d4137cbba6c2e"
            ]
        ]
    },
    {
        "id": "ef6cadcd700ea4c7",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from software",
        "x": 360,
        "y": 940,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "1df22b317e369507",
        "type": "delay",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 140,
        "y": 580,
        "wires": [
            [
                "173665859fd3d13d"
            ]
        ]
    },
    {
        "id": "d6be067405fe1b60",
        "type": "sqlite",
        "z": "feb7fb4e1a842f5a",
        "mydb": "d54830887efaf336",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "process SQLite commands",
        "x": 900,
        "y": 520,
        "wires": [
            [
                "f9563b2d3cd06350"
            ]
        ]
    },
    {
        "id": "5a70c50c42b40f79",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 760,
        "y": 420,
        "wires": [
            [
                "a6ced925e8a4454b"
            ]
        ]
    },
    {
        "id": "a6ced925e8a4454b",
        "type": "template",
        "z": "feb7fb4e1a842f5a",
        "name": "CREATE DATABASE",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "CREATE TABLE piInfo (\n    hostname         TEXT PRIMARY KEY, \n    last_seen        INTEGER,\n    ip               TEXT,\n    model            TEXT,\n    osrelease        TEXT,\n    temperature      REAL,\n    disk_percentused TEXT\n)",
        "output": "str",
        "x": 960,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a9417c51fb605055",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "select * from software where hostname = \"yellowpi\" ORDER BY last_seen ASC LIMIT 1 ",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from software where hostname = \"yellowpi\" ORDER BY last_seen ASC",
        "x": 540,
        "y": 1320,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "80dee4445056c292",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "select * from software where hostname = \"yellowpi\" ",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from software where hostname = \"yellowpi\" ",
        "x": 430,
        "y": 1360,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "3bc7778c7ef4b014",
        "type": "inject",
        "z": "feb7fb4e1a842f5a",
        "name": "delete from piinfo",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "delete from piinfo where hostname = 'superpi'",
        "x": 320,
        "y": 1200,
        "wires": [
            [
                "fdc18ab65962654d"
            ]
        ]
    },
    {
        "id": "f9563b2d3cd06350",
        "type": "debug",
        "z": "feb7fb4e1a842f5a",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 520,
        "wires": []
    }
]
